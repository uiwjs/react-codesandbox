{"version":3,"file":"static/js/main.dce92d19.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/mdast-util-to-hast/node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/node_modules/unist-util-visit/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/space-separated-tokens/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/remark-gfm/index.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/hast-util-has-property/lib/index.js","../node_modules/hast-util-heading-rank/lib/index.js","../node_modules/rehype-slug/node_modules/hast-util-to-string/index.js","../node_modules/rehype-slug/node_modules/unist-util-visit/lib/index.js","../node_modules/rehype-slug/index.js","../node_modules/hast-util-is-element/index.js","../node_modules/rehype-autolink-headings/node_modules/unist-util-visit/lib/index.js","../node_modules/rehype-autolink-headings/lib/index.js","../node_modules/hast-util-from-parse5/node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hast-util-from-parse5/node_modules/hastscript/lib/core.js","../node_modules/hast-util-from-parse5/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hast-util-from-parse5/node_modules/hastscript/lib/svg.js","../node_modules/hast-util-from-parse5/node_modules/hastscript/lib/html.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/zwitch/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/hast-util-raw/node_modules/unist-util-visit/lib/index.js","../node_modules/rehype-raw/index.js","../node_modules/rehype-attr/node_modules/unist-util-visit/lib/index.js","../node_modules/rehype-attr/src/utils.ts","../node_modules/rehype-attr/src/index.ts","../node_modules/rehype-rewrite/node_modules/unist-util-visit/lib/index.js","../node_modules/direction/index.js","../node_modules/hast-util-select/node_modules/hast-util-to-string/index.js","../node_modules/hast-util-select/node_modules/unist-util-visit/lib/index.js","../node_modules/hast-util-select/lib/enter-state.js","../node_modules/hast-util-select/lib/attribute.js","../node_modules/bcp-47-match/index.js","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../node_modules/hast-util-select/lib/pseudo.js","../node_modules/hast-util-select/lib/test.js","../node_modules/hast-util-select/lib/name.js","../node_modules/hast-util-select/lib/class-name.js","../node_modules/hast-util-select/lib/id.js","../node_modules/hast-util-select/lib/walk.js","../node_modules/hast-util-select/lib/parse.js","../node_modules/hast-util-select/lib/index.js","../node_modules/rehype-rewrite/src/index.ts","../node_modules/@uiw/react-markdown-preview/src/nodes/octiconLink.ts","../node_modules/@uiw/react-markdown-preview/src/index.tsx","../node_modules/@uiw/react-markdown-preview/src/nodes/copy.ts","../node_modules/@uiw/github-corners/src/index.ts","../node_modules/@uiw/react-github-corners/src/index.tsx","logo.svg","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../esm/index.js","Example.tsx","ExampleKKT.tsx","ExampleNoChild.tsx","App.tsx","../README.md","index.tsx","../node_modules/@mapbox/rehype-prism/index.js","../../src/main.js","../node_modules/boolbase/index.js","../../../src/api/define.ts","../node_modules/css-selector-parser/lib/index.js","../node_modules/css-selector-parser/lib/parser-context.js","../node_modules/css-selector-parser/lib/render.js","../node_modules/css-selector-parser/lib/utils.js","../node_modules/extend/index.js","../node_modules/github-slugger/index.js","../node_modules/github-slugger/regex.js","../node_modules/hast-util-parse-selector/index.js","../node_modules/hast-util-to-string/index.js","../node_modules/hastscript/factory.js","../node_modules/hastscript/html.js","../node_modules/hastscript/index.js","../node_modules/hastscript/node_modules/comma-separated-tokens/index.js","../node_modules/hastscript/node_modules/property-information/find.js","../node_modules/hastscript/node_modules/property-information/html.js","../node_modules/hastscript/node_modules/property-information/lib/aria.js","../node_modules/hastscript/node_modules/property-information/lib/html.js","../node_modules/hastscript/node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/hastscript/node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/hastscript/node_modules/property-information/lib/util/create.js","../node_modules/hastscript/node_modules/property-information/lib/util/defined-info.js","../node_modules/hastscript/node_modules/property-information/lib/util/info.js","../node_modules/hastscript/node_modules/property-information/lib/util/merge.js","../node_modules/hastscript/node_modules/property-information/lib/util/schema.js","../node_modules/hastscript/node_modules/property-information/lib/util/types.js","../node_modules/hastscript/node_modules/property-information/lib/xlink.js","../node_modules/hastscript/node_modules/property-information/lib/xml.js","../node_modules/hastscript/node_modules/property-information/lib/xmlns.js","../node_modules/hastscript/node_modules/property-information/normalize.js","../node_modules/hastscript/node_modules/space-separated-tokens/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-alphabetical/index.js","../node_modules/is-alphanumerical/index.js","../node_modules/is-buffer/index.js","../node_modules/is-decimal/index.js","../node_modules/is-hexadecimal/index.js","../node_modules/lz-string/libs/lz-string.js","../node_modules/parse-entities/decode-entity.browser.js","../node_modules/parse-entities/index.js","../node_modules/prismjs/components/prism-core.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/style-to-object/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-visit/node_modules/unist-util-is/convert.js","../node_modules/unist-util-visit/node_modules/unist-util-visit-parents/color.browser.js","../node_modules/unist-util-visit/node_modules/unist-util-visit-parents/index.js","../node_modules/xtend/immutable.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde.\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                // @ts-expect-error: to do: update `mdast-util-types` to allow explicit `undefined`s.\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n// To do: next major: expose function to make extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions`, to\n * enable GFM task list items syntax.\n *\n * @type {Extension}\n */\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node`is an element and has a `field` property.\n *\n * @param {unknown} node\n *   Thing to check (typically `Element`).\n * @param {unknown} field\n *   Field name to check (typically `string`).\n * @returns {boolean}\n *   Whether `node` is an element that has a `field` property.\n */\nexport function hasProperty(node, field) {\n  const value =\n    typeof field === 'string' &&\n    isNode(node) &&\n    node.type === 'element' &&\n    node.properties &&\n    own.call(node.properties, field) &&\n    node.properties[field]\n\n  return value !== null && value !== undefined && value !== false\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n  return Boolean(value && typeof value === 'object' && 'type' in value)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\n// To do next major: return `undefined`.\n/**\n * Get the rank (`1` to `6`) of headings (`h1` to `h6`).\n *\n * @param {Node} node\n *   Node to check.\n * @returns {number | null}\n *   Rank of the heading or `null` if not a heading.\n */\nexport function headingRank(node) {\n  const name =\n    (node && node.type === 'element' && node.tagName.toLowerCase()) || ''\n  const code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */ ? code - 48 /* `0` */ : null\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('hast').Root} Root\n */\n\nimport Slugger from 'github-slugger'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\nconst slugs = new Slugger()\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<Array<void>, Root>}\n */\nexport default function rehypeSlug() {\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'element', (node) => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n */\n\n/**\n * @typedef {null | undefined | string | TestFunctionAnything | Array<string | TestFunctionAnything>} Test\n *   Check for an arbitrary element, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if an element passes a test, unaware of TypeScript inferral.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element’s parent.\n * @returns {boolean | void}\n *   Whether this element passes the test.\n */\n\n/**\n * @template {Element} T\n *   Element type.\n * @typedef {T['tagName'] | TestFunctionPredicate<T> | Array<T['tagName'] | TestFunctionPredicate<T>>} PredicateTest\n *   Check for an element that can be inferred by TypeScript.\n */\n\n/**\n * Check if an element passes a certain node test.\n *\n * @template {Element} T\n *   Element type.\n * @callback TestFunctionPredicate\n *   Complex test function for an element that can be inferred by TypeScript.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element’s parent.\n * @returns {element is T}\n *   Whether this element passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is an element, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} T\n *   Element type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific element, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is T}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if `node` is an `Element` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific element.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is an element and passes a test.\n */\nexport const isElement =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *  When nullish, checks if `node` is an `Element`.\n *   *  When `string`, works like passing `(element) => element.tagName === test`.\n *   *  When `function` checks if function passed the element is true.\n *   *  When `array`, checks any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName'] | TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<string | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain tag name.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\nimport extend from 'extend'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {visit, SKIP} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties\n  const behavior = options.behaviour || options.behavior || 'prepend'\n  const content = options.content || contentDefaults\n  const group = options.group\n  const is = convertElement(options.test)\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  let method\n\n  if (behavior === 'wrap') {\n    method = wrap\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around\n  } else {\n    if (!props) {\n      props = {ariaHidden: 'true', tabIndex: -1}\n    }\n\n    method = inject\n  }\n\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (\n        headingRank(node) &&\n        hasProperty(node, 'id') &&\n        is(node, index, parent)\n      ) {\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, extend(true, {}, props), toChildren(content, node))\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function around(node, index, parent) {\n    // Uncommon.\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return\n\n    const link = create(\n      node,\n      extend(true, {}, props),\n      toChildren(content, node)\n    )\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function wrap(node) {\n    node.children = [create(node, extend(true, {}, props), node.children)]\n    return [SKIP]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n  function toChildren(value, node) {\n    const result = toNode(value, node)\n    return Array.isArray(result) ? result : [result]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node)\n    return extend(true, Array.isArray(value) ? [] : {}, value)\n  }\n\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    }\n  }\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes.\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements.\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {Schema} schema\n *   Current schema.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n * @property {boolean} location\n *   Whether location info was found.\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | VFile | null | undefined} [options]\n *   Configuration.\n * @returns {Node}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const options_ = options || {}\n  /** @type {Options} */\n  let settings\n  /** @type {VFile | undefined} */\n  let file\n\n  if (isFile(options_)) {\n    file = options_\n    settings = {}\n  } else {\n    file = options_.file || undefined\n    settings = options_\n  }\n\n  return one(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Node}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Node} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // @ts-expect-error: always defined as we give valid input.\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      // @ts-expect-error Types are out of date.\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<Content>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<Content>} */\n  const result = []\n\n  while (++index < nodes.length) {\n    // @ts-expect-error Assume no roots in `nodes`.\n    result[index] = one(state, nodes[index])\n  }\n\n  return result\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = one(state, reference.content)\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Node} to\n *   hast node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Node} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      node.data = {\n        position: {\n          // @ts-expect-error: assume not `undefined`.\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `undefined` is fine.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n\n/**\n * Check if something is a file.\n *\n * @param {VFile | Options} value\n *   File or options.\n * @returns {value is VFile}\n *   Whether `value` is a file.\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n */\n\n/**\n * @typedef Point\n *   unist point, where `line` and `column` can be `undefined`.\n * @property {number | undefined} line\n *   Line.\n * @property {number | undefined} column\n *   Column.\n * @property {number | undefined} [offset]\n *   Offset.\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get a line/column-based `point` from `offset`.\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {Point}\n *   Point, line/column are undefined for invalid or out of bounds input.\n *\n * @callback ToOffset\n *   Get an offset from a line/column-based `point`.\n * @param {Point | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number}\n *   Offset or `-1` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get a line/column-based `point` from `offset`.\n * @property {ToOffset} toOffset\n *   Get an offset from a line/column-based `point`.\n */\n\n/**\n * Index the given document so you can translate between line/column and offset\n * based positional info.\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /** @type {Array<number>} */\n  const indices = []\n  const search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n\n    return -1\n  }\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5Fragment\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['documentType']} P5Doctype\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['parentNode']} P5Parent\n * @typedef {import('parse5').Token.Attribute} P5Attribute\n * @typedef {Exclude<P5Node, P5Document | P5Fragment>} P5Child\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {'html' | 'svg'} Space\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {html, svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst own = {}.hasOwnProperty\n\n/** @type {(from: Node, schema: Schema) => P5Node} */\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to Parse5’s AST.\n *\n * @param {Node} tree\n *   Tree to transform.\n * @param {Options | Space | null | undefined} [options]\n *   Configuration.\n * @returns {P5Node}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const space = options && typeof options === 'object' ? options.space : options\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Document}\n */\nfunction root(node, schema) {\n  /** @type {P5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Fragment}\n */\nfunction fragment(node, schema) {\n  /** @type {P5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n * @returns {P5Doctype}\n */\nfunction doctype(node) {\n  /** @type {P5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    // @ts-expect-error: change to `null` in a major?\n    parentNode: undefined\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n * @returns {P5Text}\n */\nfunction text(node) {\n  /** @type {P5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n * @returns {P5Comment}\n */\nfunction comment(node) {\n  /** @type {P5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Element}\n *   `parse5` node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<P5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  /** @type {P5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: html and svg both have a space.\n    namespaceURI: webNamespaces[currentSchema.space],\n    childNodes: [],\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<string | number> | string | number | boolean | null | undefined} value\n *   hast property value.\n * @returns {P5Attribute | void}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {P5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<Content>} children\n *   List of children.\n * @param {P5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<P5Child>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<P5Child>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {P5Child} */\n      // @ts-expect-error assume no document.\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Node} from\n *   hast node.\n * @param {P5Node} to\n *   `parse5` node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      // @ts-expect-error assume this is set.\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      // @ts-expect-error assume this is set.\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {Omit<import('parse5').Element, 'parentNode'>} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {Omit<import('parse5').Location, 'startOffset' | 'endOffset'> & {startOffset: number|undefined, endOffset: number|undefined}} P5Location\n * @typedef {import('parse5').ParserOptions} P5ParserOptions\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {import('../complex-types').Raw} Raw\n *\n * @typedef {Omit<Comment, 'value'> & {value: {stitch: Node}}} Stitch\n *\n * @typedef Options\n * @property {Array<string>} [passThrough]\n *   List of custom hast node types to pass through (keep) in hast.\n *   If the passed through nodes have children, those children are expected to\n *   be hast and will be handled.\n *\n * @typedef HiddenTokenizer\n * @property {Array<HiddenLocationTracker>} __mixins\n *   Way too simple, but works for us.\n * @property {HiddenPreprocessor} preprocessor\n * @property {(value: string) => void} write\n * @property {() => number} _consume\n * @property {Array<HiddenToken>} tokenQueue\n * @property {string} state\n * @property {string} returnState\n * @property {number} charRefCode\n * @property {Array<number>} tempBuff\n * @property {Function} _flushCodePointsConsumedAsCharacterReference\n * @property {string} lastStartTagName\n * @property {number} consumedAfterSnapshot\n * @property {boolean} active\n * @property {HiddenToken|undefined} currentCharacterToken\n * @property {HiddenToken|undefined} currentToken\n * @property {unknown} currentAttr\n * @property {Function} NAMED_CHARACTER_REFERENCE_STATE\n * @property {Function} NUMERIC_CHARACTER_REFERENCE_END_STATE\n *\n * @typedef {Record<string, unknown> & {location: P5Location}} HiddenToken\n *\n * @typedef HiddenPreprocessor\n * @property {string|undefined} html\n * @property {number} pos\n * @property {number} lastGapPos\n * @property {number} lastCharPos\n * @property {Array<number>} gapStack\n * @property {boolean} skipNextNewLine\n * @property {boolean} lastChunkWritten\n * @property {boolean} endOfChunkHit\n *\n * @typedef HiddenLocationTracker\n * @property {P5Location|undefined} currentAttrLocation\n * @property {P5Location} ctLoc\n * @property {HiddenPosTracker} posTracker\n *\n * @typedef HiddenPosTracker\n * @property {boolean} isEol\n * @property {number} lineStartPos\n * @property {number} droppedBufferSize\n * @property {number} offset\n * @property {number} col\n * @property {number} line\n */\n\n// @ts-expect-error: untyped.\nimport Parser from 'parse5/lib/parser/index.js'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst inTemplateMode = 'IN_TEMPLATE_MODE'\nconst dataState = 'DATA_STATE'\nconst characterToken = 'CHARACTER_TOKEN'\nconst startTagToken = 'START_TAG_TOKEN'\nconst endTagToken = 'END_TAG_TOKEN'\nconst commentToken = 'COMMENT_TOKEN'\nconst doctypeToken = 'DOCTYPE_TOKEN'\n\n/** @type {P5ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Given a hast tree and an optional vfile (for positional info), return a new\n * parsed-again hast tree.\n *\n * @param tree\n *   Original hast tree.\n * @param file\n *   Virtual file for positional info, optional.\n * @param options\n *   Configuration.\n */\nexport const raw =\n  /**\n   * @type {(\n   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &\n   *   ((tree: Node, options?: Options) => Node)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {VFile} [file]\n     * @param {Options} [options]\n     */\n    function (tree, file, options) {\n      let index = -1\n      const parser = new Parser(parseOptions)\n      const one = zwitch('type', {\n        handlers: {root, element, text, comment, doctype, raw: handleRaw},\n        // @ts-expect-error: hush.\n        unknown\n      })\n      /** @type {boolean|undefined} */\n      let stitches\n      /** @type {HiddenTokenizer|undefined} */\n      let tokenizer\n      /** @type {HiddenPreprocessor|undefined} */\n      let preprocessor\n      /** @type {HiddenPosTracker|undefined} */\n      let posTracker\n      /** @type {HiddenLocationTracker|undefined} */\n      let locationTracker\n\n      if (isOptions(file)) {\n        options = file\n        file = undefined\n      }\n\n      if (options && options.passThrough) {\n        while (++index < options.passThrough.length) {\n          // @ts-expect-error: hush.\n          one.handlers[options.passThrough[index]] = stitch\n        }\n      }\n\n      const result = fromParse5(\n        documentMode(tree) ? document() : fragment(),\n        file\n      )\n\n      if (stitches) {\n        visit(result, 'comment', (node, index, parent) => {\n          const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n          if (stitch.value.stitch && parent !== null && index !== null) {\n            // @ts-expect-error: assume the stitch is allowed.\n            parent.children[index] = stitch.value.stitch\n            return index\n          }\n        })\n      }\n\n      // Unpack if possible and when not given a `root`.\n      if (\n        tree.type !== 'root' &&\n        result.type === 'root' &&\n        result.children.length === 1\n      ) {\n        return result.children[0]\n      }\n\n      return result\n\n      /**\n       * @returns {P5Fragment}\n       */\n      function fragment() {\n        /** @type {P5Element} */\n        const context = {\n          nodeName: 'template',\n          tagName: 'template',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Element} */\n        const mock = {\n          nodeName: 'documentmock',\n          tagName: 'documentmock',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Fragment} */\n        const doc = {nodeName: '#document-fragment', childNodes: []}\n\n        parser._bootstrap(mock, context)\n        parser._pushTmplInsertionMode(inTemplateMode)\n        parser._initTokenizerForFragmentParsing()\n        parser._insertFakeRootElement()\n        parser._resetInsertionMode()\n        parser._findFormInFragmentContext()\n\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        parser._adoptNodes(mock.childNodes[0], doc)\n\n        return doc\n      }\n\n      /**\n       * @returns {P5Document}\n       */\n      function document() {\n        /** @type {P5Document} */\n        const doc = parser.treeAdapter.createDocument()\n\n        parser._bootstrap(doc, undefined)\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        return doc\n      }\n\n      /**\n       * @param {Array<Content>} nodes\n       * @returns {void}\n       */\n      function all(nodes) {\n        let index = -1\n\n        /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n        if (nodes) {\n          while (++index < nodes.length) {\n            one(nodes[index])\n          }\n        }\n      }\n\n      /**\n       * @param {Root} node\n       * @returns {void}\n       */\n      function root(node) {\n        all(node.children)\n      }\n\n      /**\n       * @param {Element} node\n       * @returns {void}\n       */\n      function element(node) {\n        resetTokenizer()\n        parser._processInputToken(startTag(node))\n\n        all(node.children)\n\n        if (!htmlVoidElements.includes(node.tagName)) {\n          resetTokenizer()\n          parser._processInputToken(endTag(node))\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @returns {void}\n       */\n      function text(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: characterToken,\n          chars: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Doctype} node\n       * @returns {void}\n       */\n      function doctype(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: doctypeToken,\n          name: 'html',\n          forceQuirks: false,\n          publicId: '',\n          systemId: '',\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Comment|Stitch} node\n       * @returns {void}\n       */\n      function comment(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: commentToken,\n          data: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Raw} node\n       * @returns {void}\n       */\n      function handleRaw(node) {\n        const start = pointStart(node)\n        const line = start.line || 1\n        const column = start.column || 1\n        const offset = start.offset || 0\n\n        /* c8 ignore next 4 */\n        if (!preprocessor) throw new Error('Expected `preprocessor`')\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n        if (!locationTracker) throw new Error('Expected `locationTracker`')\n\n        // Reset preprocessor:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/preprocessor.js#L17>.\n        preprocessor.html = undefined\n        preprocessor.pos = -1\n        preprocessor.lastGapPos = -1\n        preprocessor.lastCharPos = -1\n        preprocessor.gapStack = []\n        preprocessor.skipNextNewLine = false\n        preprocessor.lastChunkWritten = false\n        preprocessor.endOfChunkHit = false\n\n        // Reset preprocessor mixin:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/position-tracking/preprocessor-mixin.js>.\n        posTracker.isEol = false\n        posTracker.lineStartPos = -column + 1 // Looks weird, but ensures we get correct positional info.\n        posTracker.droppedBufferSize = offset\n        posTracker.offset = 0\n        posTracker.col = 1\n        posTracker.line = line\n\n        // Reset location tracker:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js>.\n        locationTracker.currentAttrLocation = undefined\n        locationTracker.ctLoc = createParse5Location(node)\n\n        // See the code for `parse` and `parseFragment`:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/parser/index.js#L371>.\n        tokenizer.write(node.value)\n        parser._runParsingLoop(null)\n\n        // Character references hang, so if we ended there, we need to flush\n        // those too.\n        // We reset the preprocessor as if the document ends here.\n        // Then one single call to the relevant state does the trick, parse5\n        // consumes the whole token.\n        if (\n          tokenizer.state === 'NAMED_CHARACTER_REFERENCE_STATE' ||\n          tokenizer.state === 'NUMERIC_CHARACTER_REFERENCE_END_STATE'\n        ) {\n          preprocessor.lastChunkWritten = true\n          tokenizer[tokenizer.state](tokenizer._consume())\n        }\n      }\n\n      /**\n       * @param {Node} node\n       */\n      function stitch(node) {\n        stitches = true\n\n        /** @type {Node} */\n        let clone\n\n        // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n        // passed through node).\n        if ('children' in node) {\n          clone = {\n            ...node,\n            children: raw(\n              {type: 'root', children: node.children},\n              file,\n              options\n              // @ts-expect-error Assume a given parent yields a parent.\n            ).children\n          }\n        } else {\n          clone = {...node}\n        }\n\n        // Hack: `value` is supposed to be a string, but as none of the tools\n        // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n        // through.\n        comment({type: 'comment', value: {stitch: clone}})\n      }\n\n      function resetTokenizer() {\n        /* c8 ignore next 2 */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n\n        // Process final characters if they’re still there after hibernating.\n        // Similar to:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.\n        const token = tokenizer.currentCharacterToken\n\n        if (token) {\n          token.location.endLine = posTracker.line\n          token.location.endCol = posTracker.col + 1\n          token.location.endOffset = posTracker.offset + 1\n          parser._processInputToken(token)\n        }\n\n        // Reset tokenizer:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/index.js#L218-L234>.\n        // Especially putting it back in the `data` state is useful: some elements,\n        // like textareas and iframes, change the state.\n        // See GH-7.\n        // But also if broken HTML is in `raw`, and then a correct element is given.\n        // See GH-11.\n        tokenizer.tokenQueue = []\n        tokenizer.state = dataState\n        tokenizer.returnState = ''\n        tokenizer.charRefCode = -1\n        tokenizer.tempBuff = []\n        tokenizer.lastStartTagName = ''\n        tokenizer.consumedAfterSnapshot = -1\n        tokenizer.active = false\n        tokenizer.currentCharacterToken = undefined\n        tokenizer.currentToken = undefined\n        tokenizer.currentAttr = undefined\n      }\n    }\n  )\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction startTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: startTagToken,\n    tagName: node.tagName,\n    selfClosing: false,\n    attrs: attributes(node),\n    location\n  }\n}\n\n/**\n * @param {Element} node\n * @returns {Array<P5Attribute>}\n */\nfunction attributes(node) {\n  return toParse5({\n    tagName: node.tagName,\n    type: 'element',\n    properties: node.properties,\n    children: []\n    // @ts-expect-error Assume element.\n  }).attrs\n}\n\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction endTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: endTagToken,\n    tagName: node.tagName,\n    attrs: [],\n    location\n  }\n}\n\n/**\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot compile `' + node.type + '` node')\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * @param {Node|Stitch} node\n * @returns {P5Location}\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  return {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n}\n\n/**\n * @param {VFile|Options|undefined} value\n * @return {value is Options}\n */\nfunction isOptions(value) {\n  return Boolean(value && !('message' in value && 'messages' in value))\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  🙌\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw(options = {}) {\n  return (tree, file) => {\n    // Assume that when a root was given, it’s also returned.\n    const result = /** @type {Root} */ (raw(tree, file, options))\n    return result\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","import { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport { RehypeAttrsOptions } from './';\n\nexport const getURLParameters = (url: string): Record<string, string | number | boolean> =>\n(url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(\n  (a: Record<string, string | number>, v: string) => (\n    (a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a\n  ),\n  {},\n);\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || (element.type !== 'text' && (element.type as string) !== 'comment') || (element.type === 'text' && (element.value as string).replace(/(\\n|\\s)/g, '') !== '')) return;\n      if ((element.type as string) === 'comment') {\n        if (!/^rehype:/.test(element.value as string)) return;\n        const nextNode = nextChild(data, i, 'pre')\n        if (nextNode) return;\n        return element;\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import { Plugin } from 'unified';\nimport { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * \n   * ⇣⇣⇣⇣⇣⇣\n   * \n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * ⇣⇣⇣⇣⇣⇣\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * ⇣⇣⇣⇣⇣⇣\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   */\n  properties: 'data' | 'string' | 'attr';\n}\n\nconst defaultOptions: RehypeAttrsOptions = {\n  properties: 'data',\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options) => {\n  const opts = { ...defaultOptions, ...options }\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, opts.properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, opts.properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').ElementChild} ElementChild\n * @typedef {import('./types.js').Direction} Direction\n * @typedef {import('unist-util-visit/complex-types.js').Visitor<ElementChild>} Visitor\n */\n\nimport {direction} from 'direction'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {visit, EXIT, SKIP} from 'unist-util-visit'\n\n/**\n * Enter a node.\n *\n * The caller is responsible for calling the return value `exit`.\n *\n * @param {SelectState} state\n *   Current state.\n *\n *   Will be mutated: `exit` undos the changes.\n * @param {Node} node\n *   Node to enter.\n * @returns {() => void}\n *   Call to exit.\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction | undefined} */\n  let dirInferred\n\n  if (node.type === 'element' && node.properties) {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const dir = dirProperty(node)\n\n    if (lang !== undefined && lang !== null) {\n      state.language = String(lang)\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n      }\n\n      if (node.tagName === 'svg') {\n        state.schema = svg\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (dir === 'rtl') {\n        dirInferred = dir\n      } else if (\n        // Explicit `[dir=ltr]`.\n        dir === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'html') ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'input' && type === 'tel')\n      ) {\n        dirInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (dir === 'auto' || node.tagName === 'bdi') {\n        if (node.tagName === 'textarea') {\n          // Check contents of `<textarea>`.\n          dirInferred = dirBidi(toString(node))\n        } else if (\n          node.tagName === 'input' &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          dirInferred = node.properties.value\n            ? // @ts-expect-error Assume string\n              dirBidi(node.properties.value)\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (dirInferred) {\n        state.direction = dirInferred\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n    }\n  }\n\n  return reset\n\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      dirInferred = dirBidi(child.value)\n      return dirInferred ? EXIT : undefined\n    }\n\n    if (\n      child !== node &&\n      child.type === 'element' &&\n      (child.tagName === 'bdi' ||\n        child.tagName === 'script' ||\n        child.tagName === 'style' ||\n        child.tagName === 'textare' ||\n        dirProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Direction | undefined}\n */\nfunction dirBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementChild} node\n * @returns {Direction | undefined}\n */\nfunction dirProperty(node) {\n  const value =\n    node.type === 'element' &&\n    node.properties &&\n    typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleAttr} RuleAttr\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Schema} Schema\n * @typedef {import('./types.js').Info} Info\n * @typedef {import('./types.js').PropertyValue} PropertyValue\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {zwitch} from 'zwitch'\n\n/** @type {(query: RuleAttr, element: Element, info: Info) => boolean} */\nconst handle = zwitch('operator', {\n  unknown: unknownOperator,\n  // @ts-expect-error: hush.\n  invalid: exists,\n  handlers: {\n    '=': exact,\n    '~=': spaceSeparatedList,\n    '|=': exactOrPrefix,\n    '^=': begins,\n    '$=': ends,\n    '*=': contains\n  }\n})\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @param {Schema} schema\n * @returns {boolean}\n */\nexport function attribute(query, element, schema) {\n  const attrs = query.attrs\n  let index = -1\n\n  while (++index < attrs.length) {\n    if (!handle(attrs[index], element, find(schema, attrs[index].name))) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Check whether an attribute exists.\n *\n * `[attr]`\n *\n * @param {RuleAttr} _\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exists(_, element, info) {\n  return hasProperty(element, info.property)\n}\n\n/**\n * Check whether an attribute has an exact value.\n *\n * `[attr=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exact(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      normalizeValue(element.properties[info.property], info) === query.value\n  )\n}\n\n/**\n * Check whether an attribute, interpreted as a space-separated list, contains\n * a value.\n *\n * `[attr~=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction spaceSeparatedList(query, element, info) {\n  const value = element.properties && element.properties[info.property]\n\n  return (\n    // If this is a space-separated list, and the query is contained in it, return\n    // true.\n    (!info.commaSeparated &&\n      value &&\n      typeof value === 'object' &&\n      query.value &&\n      value.includes(query.value)) ||\n    // For all other values (including comma-separated lists), return whether this\n    // is an exact match.\n    (hasProperty(element, info.property) &&\n      normalizeValue(value, info) === query.value)\n  )\n}\n\n/**\n * Check whether an attribute has a substring as either the exact value or a\n * prefix.\n *\n * `[attr|=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exactOrPrefix(query, element, info) {\n  const value = normalizeValue(\n    element.properties && element.properties[info.property],\n    info\n  )\n\n  return Boolean(\n    hasProperty(element, info.property) &&\n      query.value &&\n      (value === query.value ||\n        (value.slice(0, query.value.length) === query.value &&\n          value.charAt(query.value.length) === '-'))\n  )\n}\n\n/**\n * Check whether an attribute has a substring as its start.\n *\n * `[attr^=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction begins(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        0,\n        query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * Check whether an attribute has a substring as its end.\n *\n * `[attr$=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction ends(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        -query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * Check whether an attribute contains a substring.\n *\n * `[attr*=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction contains(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).includes(\n        query.value\n      )\n  )\n}\n\n// Shouldn’t be called, Parser throws an error instead.\n/**\n * @param {unknown} query\n * @returns {never}\n */\n/* c8 ignore next 4 */\nfunction unknownOperator(query) {\n  // @ts-expect-error: `operator` guaranteed.\n  throw new Error('Unknown operator `' + query.operator + '`')\n}\n\n/**\n * Stringify a hast value back to its HTML form.\n *\n * @param {PropertyValue} value\n * @param {Info} info\n * @returns {string}\n */\nfunction normalizeValue(value, info) {\n  if (typeof value === 'boolean') {\n    return info.attribute\n  }\n\n  if (Array.isArray(value)) {\n    return (info.commaSeparated ? commas : spaces)(value)\n  }\n\n  return String(value)\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more info on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n *   BCP-47 tag.\n * @typedef {Array<Tag>} Tags\n *   List of BCP-47 tags.\n * @typedef {string} Range\n *   RFC 4647 range.\n * @typedef {Array<Range>} Ranges\n *   List of RFC 4647 range.\n *\n * @callback Check\n *   An internal check.\n * @param {Tag} tag\n *   BCP-47 tag.\n * @param {Range} range\n *   RFC 4647 range.\n * @returns {boolean}\n *   Whether the range matches the tag.\n *\n * @typedef {FilterOrLookup<true>} Filter\n *   Filter: yields all tags that match a range.\n * @typedef {FilterOrLookup<false>} Lookup\n *   Lookup: yields the best tag that matches a range.\n */\n\n/**\n * @template {boolean} IsFilter\n *   Whether to filter or perform a lookup.\n * @callback FilterOrLookup\n *   A check.\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n *   Result.\n */\n\n/**\n * Factory to perform a filter or a lookup.\n *\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.\n * That way, earlier ranges matching any tag have precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n *   A check.\n * @param {IsFilter} filter\n *   Whether to filter or perform a lookup.\n * @returns {FilterOrLookup<IsFilter>}\n *   Filter or lookup.\n */\nfunction factory(check, filter) {\n  /**\n   * @param {Tag|Tags} tags\n   *   One or more BCP-47 tags.\n   * @param {Range|Ranges|undefined} [ranges='*']\n   *   One or more RFC 4647 ranges.\n   * @returns {IsFilter extends true ? Tags : Tag|undefined}\n   *   Result.\n   */\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tag|undefined}\n *   BCP-47 tag.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n",null,null,null,"/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoSelector} RulePseudoSelector\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').ElementChild} ElementChild\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {whitespace} from 'hast-util-whitespace'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\nimport {queryToSelectors, walk} from './walk.js'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\n/** @type {(rule: Rule | RulePseudo, element: Element, index: number | undefined, parent: Parent | undefined, state: SelectState) => boolean} */\nconst handle = zwitch('name', {\n  unknown: unknownPseudo,\n  invalid: invalidPseudo,\n  handlers: {\n    any: matches,\n    'any-link': anyLink,\n    blank,\n    checked,\n    dir,\n    disabled,\n    empty,\n    enabled,\n    'first-child': firstChild,\n    'first-of-type': firstOfType,\n    has,\n    lang,\n    'last-child': lastChild,\n    'last-of-type': lastOfType,\n    matches,\n    not,\n    'nth-child': nthChild,\n    'nth-last-child': nthLastChild,\n    'nth-of-type': nthOfType,\n    'nth-last-of-type': nthLastOfType,\n    'only-child': onlyChild,\n    'only-of-type': onlyOfType,\n    optional,\n    'read-only': readOnly,\n    'read-write': readWrite,\n    required,\n    root,\n    scope\n  }\n})\n\npseudo.needsIndex = [\n  'any',\n  'first-child',\n  'first-of-type',\n  'last-child',\n  'last-of-type',\n  'matches',\n  'not',\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type',\n  'only-child',\n  'only-of-type'\n]\n\n/**\n * Check whether an element matches pseudo selectors.\n *\n * @param {Rule} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function pseudo(query, element, index, parent, state) {\n  const pseudos = query.pseudos\n  let offset = -1\n\n  while (++offset < pseudos.length) {\n    if (!handle(pseudos[offset], element, index, parent, state)) return false\n  }\n\n  return true\n}\n\n/**\n * Check whether an element matches an `:any-link` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction anyLink(_, element) {\n  return (\n    (element.tagName === 'a' ||\n      element.tagName === 'area' ||\n      element.tagName === 'link') &&\n    hasProperty(element, 'href')\n  )\n}\n\n/**\n * Check whether an element matches a `:blank` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * Check whether an element matches a `:checked` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction checked(_, element) {\n  if (element.tagName === 'input' || element.tagName === 'menuitem') {\n    return Boolean(\n      element.properties &&\n        (element.properties.type === 'checkbox' ||\n          element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (element.tagName === 'option') {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * Check whether an element matches a `:dir()` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction dir(query, _1, _2, _3, state) {\n  return state.direction === query.value\n}\n\n/**\n * Check whether an element matches a `:disabled` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction disabled(_, element) {\n  return (\n    (element.tagName === 'button' ||\n      element.tagName === 'input' ||\n      element.tagName === 'select' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'optgroup' ||\n      element.tagName === 'option' ||\n      element.tagName === 'menuitem' ||\n      element.tagName === 'fieldset') &&\n    hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * Check whether an element matches an `:empty` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * Check whether an element matches an `:enabled` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * Check whether an element matches a `:first-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * Check whether an element matches a `:first-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction has(query, element, _1, _2, state) {\n  /** @type {SelectState} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // Do walk deep.\n    shallow: false,\n    // One result is enough.\n    one: true,\n    scopeElements: [element],\n    results: [],\n    rootQuery: queryToSelectors(query.value)\n  }\n\n  walk(childState, {type: 'root', children: element.children})\n\n  return childState.results.length > 0\n}\n\n/**\n * Check whether an element matches a `:lang()` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lang(query, _1, _2, _3, state) {\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    // @ts-expect-error never `selectors`.\n    extendedFilter(state.language, commas(query.value)).length > 0\n  )\n}\n\n/**\n * Check whether an element matches a `:last-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * Check whether an element matches a `:last-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * Check whether an element `:matches` further selectors.\n *\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number | undefined} _\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction matches(query, element, _, parent, state) {\n  /** @type {SelectState} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // Do walk deep.\n    shallow: false,\n    // One result is enough.\n    one: true,\n    scopeElements: [element],\n    results: [],\n    rootQuery: queryToSelectors(query.value)\n  }\n\n  walk(childState, element)\n\n  return childState.results[0] === element\n}\n\n/**\n * Check whether an element does `:not` match further selectors.\n *\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction not(query, element, index, parent, state) {\n  return !matches(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches an `:nth-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.elementIndex === 'number' && fn(state.elementIndex)\n}\n\n/**\n * Check whether an element matches an `:nth-last-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      fn(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * Check whether an element matches a `:nth-last-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    fn(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * Check whether an element matches an `:nth-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && fn(state.typeIndex)\n}\n\n/**\n * Check whether an element matches an `:only-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * Check whether an element matches an `:only-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * Check whether an element matches an `:optional` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * Check whether an element matches a `:read-only` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches a `:read-write` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return element.tagName === 'input' || element.tagName === 'textarea'\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * Check whether an element matches a `:required` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction required(_, element) {\n  return (\n    (element.tagName === 'input' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'select') &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * Check whether an element matches a `:root` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction root(_, element, _1, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      (element.tagName === 'html' || element.tagName === 'svg')\n  )\n}\n\n/**\n * Check whether an element matches a `:scope` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction scope(_, element, _1, _2, state) {\n  return state.scopeElements.includes(element)\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  throw new Error('Invalid pseudo-selector')\n}\n\n/**\n * @param {unknown} query\n * @returns {never}\n */\nfunction unknownPseudo(query) {\n  // @ts-expect-error: indexable.\n  if (query.name) {\n    // @ts-expect-error: indexable.\n    throw new Error('Unknown pseudo-selector `' + query.name + '`')\n  }\n\n  throw new Error('Unexpected pseudo-element or empty pseudo-class')\n}\n\n/**\n * Check children.\n *\n * @param {Element} element\n * @param {(child: ElementChild) => boolean} check\n * @returns {boolean}\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n/**\n * @param {SelectState} state\n * @param {RulePseudo} query\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * @param {RulePseudo} query\n * @returns {(value: number) => boolean}\n */\nfunction getCachedNthCheck(query) {\n  /** @type {(value: number) => boolean} */\n  // @ts-expect-error: cache.\n  let fn = query._cachedFn\n\n  if (!fn) {\n    // @ts-expect-error: always string.\n    fn = nthCheck(query.value)\n    // @ts-expect-error: cache.\n    query._cachedFn = fn\n  }\n\n  return fn\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\n\n/**\n * Test a rule.\n *\n * @param {Rule} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, element, index, parent, state) {\n  return Boolean(\n    (!query.tagName || name(query, element)) &&\n      (!query.classNames || className(query, element)) &&\n      (!query.id || id(query, element)) &&\n      (!query.attrs || attribute(query, element, state.schema)) &&\n      (!query.pseudos || pseudo(query, element, index, parent, state))\n  )\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has a tag name.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function name(query, element) {\n  return query.tagName === '*' || query.tagName === element.tagName\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has all class names.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function className(query, element) {\n  /** @type {readonly string[]} */\n  // @ts-expect-error Assume array.\n  const value = element.properties.className || []\n  let index = -1\n\n  if (query.classNames) {\n    while (++index < query.classNames.length) {\n      if (!value.includes(query.classNames[index])) return false\n    }\n  }\n\n  return true\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has an ID.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function id(query, element) {\n  return Boolean(element.properties && element.properties.id === query.id)\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Selectors} Selectors\n *\n * @typedef Nest\n *   Rule sets by nesting.\n * @property {Array<RuleSet> | undefined} descendant\n *   `a b`\n * @property {Array<RuleSet> | undefined} directChild\n *   `a > b`\n * @property {Array<RuleSet> | undefined} adjacentSibling\n *   `a + b`\n * @property {Array<RuleSet> | undefined} generalSibling\n *   `a ~ b`\n *\n * @typedef Counts\n *   Info on elements in a parent.\n * @property {number} count\n *   Number of elements.\n * @property {Map<string, number>} types\n *   Number of elements by tag name.\n */\n\nimport {enterState} from './enter-state.js'\nimport {test} from './test.js'\n\n/** @type {Array<never>} */\nconst empty = []\n\n/**\n * Turn a query into a uniform object.\n *\n * @param {Selectors | RuleSet | null} query\n * @returns {Selectors}\n */\nexport function queryToSelectors(query) {\n  if (query === null) {\n    return {type: 'selectors', selectors: []}\n  }\n\n  if (query.type === 'ruleSet') {\n    return {type: 'selectors', selectors: [query]}\n  }\n\n  return query\n}\n\n/**\n * Walk a tree.\n *\n * @param {SelectState} state\n * @param {Node | undefined} tree\n */\nexport function walk(state, tree) {\n  if (tree) {\n    one(state, [], tree, undefined, undefined)\n  }\n}\n\n/**\n * Check a node.\n *\n * @param {SelectState} state\n * @param {Array<RuleSet>} currentRules\n * @param {Node} node\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @returns {Nest}\n */\nfunction one(state, currentRules, node, index, parent) {\n  /** @type {Nest} */\n  let nestResult = {\n    directChild: undefined,\n    descendant: undefined,\n    adjacentSibling: undefined,\n    generalSibling: undefined\n  }\n  const exit = enterState(state, node)\n\n  if (node.type === 'element') {\n    nestResult = applySelectors(\n      state,\n      // Try the root rules for this element too.\n      combine(currentRules, state.rootQuery.selectors),\n      node,\n      index,\n      parent\n    )\n  }\n\n  // If this is a parent, and we want to delve into them, and we haven’t found\n  // our single result yet.\n  if ('children' in node && !state.shallow && !(state.one && state.found)) {\n    all(state, nestResult, node)\n  }\n\n  exit()\n\n  return nestResult\n}\n\n/**\n * Check a node.\n *\n * @param {SelectState} state\n * @param {Nest} nest\n * @param {Parent} node\n * @returns {void}\n */\nfunction all(state, nest, node) {\n  const fromParent = combine(nest.descendant, nest.directChild)\n  /** @type {Array<RuleSet> | undefined} */\n  let fromSibling\n  let index = -1\n  /**\n   * Total counts.\n   * @type {Counts}\n   */\n  const total = {count: 0, types: new Map()}\n  /**\n   * Counts of previous siblings.\n   * @type {Counts}\n   */\n  const before = {count: 0, types: new Map()}\n\n  while (++index < node.children.length) {\n    count(total, node.children[index])\n  }\n\n  index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name =\n      child.type === 'element' ? child.tagName.toUpperCase() : undefined\n    // Before counting further elements:\n    state.elementIndex = before.count\n    state.typeIndex = name ? before.types.get(name) || 0 : 0\n    // After counting all elements.\n    state.elementCount = total.count\n    state.typeCount = name ? total.types.get(name) : 0\n\n    // Only apply if this is a parent, this should be an element, but we check\n    // for parents so that we delve into custom nodes too.\n    if ('children' in child) {\n      const forSibling = combine(fromParent, fromSibling)\n      const nest = one(state, forSibling, node.children[index], index, node)\n      fromSibling = combine(nest.generalSibling, nest.adjacentSibling)\n    }\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    count(before, node.children[index])\n  }\n}\n\n/**\n * Apply selectors to an element.\n *\n * @param {SelectState} state\n *   Current state.\n * @param {Array<RuleSet>} rules\n *   Rules to apply.\n * @param {Element} node\n *   Element to apply rules to.\n * @param {number | undefined} index\n *   Index of node in parent.\n * @param {Parent | undefined} parent\n *   Parent of node.\n * @returns {Nest}\n *   Further rules.\n */\nfunction applySelectors(state, rules, node, index, parent) {\n  /** @type {Nest} */\n  const nestResult = {\n    directChild: undefined,\n    descendant: undefined,\n    adjacentSibling: undefined,\n    generalSibling: undefined\n  }\n  let selectorIndex = -1\n\n  while (++selectorIndex < rules.length) {\n    const ruleSet = rules[selectorIndex]\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    // When shallow, we don’t allow nested rules.\n    // Idea: we could allow a stack of parents?\n    // Might get quite complex though.\n    if (state.shallow && ruleSet.rule.rule) {\n      throw new Error('Expected selector without nesting')\n    }\n\n    // If this rule matches:\n    if (test(ruleSet.rule, node, index, parent, state)) {\n      const nest = ruleSet.rule.rule\n\n      // Are there more?\n      if (nest) {\n        /** @type {RuleSet} */\n        const rule = {type: 'ruleSet', rule: nest}\n        /** @type {keyof Nest} */\n        const label =\n          nest.nestingOperator === '+'\n            ? 'adjacentSibling'\n            : nest.nestingOperator === '~'\n            ? 'generalSibling'\n            : nest.nestingOperator === '>'\n            ? 'directChild'\n            : 'descendant'\n        add(nestResult, label, rule)\n      } else {\n        // We have a match!\n        state.found = true\n\n        if (!state.results.includes(node)) {\n          state.results.push(node)\n        }\n      }\n    }\n\n    // Descendant.\n    if (ruleSet.rule.nestingOperator === null) {\n      add(nestResult, 'descendant', ruleSet)\n    }\n    // Adjacent.\n    else if (ruleSet.rule.nestingOperator === '~') {\n      add(nestResult, 'generalSibling', ruleSet)\n    }\n    // Drop top-level nesting (`undefined`), direct child (`>`), adjacent sibling (`+`).\n  }\n\n  return nestResult\n}\n\n/**\n * Combine two lists, if needed.\n *\n * This is optimized to create as few lists as possible.\n *\n * @param {Array<RuleSet> | undefined} left\n * @param {Array<RuleSet> | undefined} right\n * @returns {Array<RuleSet>}\n */\nfunction combine(left, right) {\n  return left && right && left.length > 0 && right.length > 0\n    ? [...left, ...right]\n    : left && left.length > 0\n    ? left\n    : right && right.length > 0\n    ? right\n    : empty\n}\n\n/**\n * Add a rule to a nesting map.\n *\n * @param {Nest} nest\n * @param {keyof Nest} field\n * @param {RuleSet} rule\n */\nfunction add(nest, field, rule) {\n  const list = nest[field]\n  if (list) {\n    list.push(rule)\n  } else {\n    nest[field] = [rule]\n  }\n}\n\n/**\n * Count a node.\n *\n * @param {Counts} counts\n *   Counts.\n * @param {Node} node\n *   Node (we’re looking for elements).\n * @returns {void}\n *   Nothing.\n */\nfunction count(counts, node) {\n  if (node.type === 'element') {\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name = node.tagName.toUpperCase()\n    const count = (counts.types.get(name) || 0) + 1\n    counts.count++\n    counts.types.set(name, count)\n  }\n}\n","/**\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\n\nconst parser = new CssSelectorParser()\n\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n/**\n * @param {string} selector\n * @returns {Selectors | RuleSet | null}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  return parser.parse(selector)\n}\n","/**\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Space} Space\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {html, svg} from 'property-information'\nimport {queryToSelectors, walk} from './walk.js'\nimport {parse} from './parse.js'\n\n/**\n * Check that the given `node` matches `selector`.\n *\n * This only checks the element itself, not the surrounding tree.\n * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are\n * selectors like `:first-child`, etc.\n * This only checks that the given element matches the selector.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Node | null | undefined} [node]\n *   Node that might match `selector`, should be an element.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {boolean}\n *   Whether `node` matches `selector`.\n */\nexport function matches(selector, node, space) {\n  const state = createState(selector, node, space)\n  state.one = true\n  state.shallow = true\n  walk(state, node || undefined)\n  return state.results.length > 0\n}\n\n/**\n * Select the first element that matches `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Node | null | undefined} [tree]\n *   Tree to search.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {Element | null}\n *   First element in `tree` that matches `selector` or `null` if nothing is\n *   found.\n *   This could be `tree` itself.\n */\nexport function select(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  state.one = true\n  walk(state, tree || undefined)\n  // To do in major: return `undefined` instead.\n  return state.results[0] || null\n}\n\n/**\n * Select all elements that match `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Node | null | undefined} [tree]\n *   Tree to search.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {Array<Element>}\n *   Elements in `tree` that match `selector`.\n *   This could include `tree` itself.\n */\nexport function selectAll(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  walk(state, tree || undefined)\n  return state.results\n}\n\n/**\n * @param {string} selector\n *   Tree to search.\n * @param {Node | null | undefined} [tree]\n *   Tree to search.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {SelectState} SelectState\n */\nfunction createState(selector, tree, space) {\n  return {\n    // State of the query.\n    rootQuery: queryToSelectors(parse(selector)),\n    results: [],\n    // @ts-expect-error assume elements.\n    scopeElements: tree ? (tree.type === 'root' ? tree.children : [tree]) : [],\n    one: false,\n    shallow: false,\n    found: false,\n    // State in the tree.\n    schema: space === 'svg' ? svg : html,\n    language: undefined,\n    direction: 'ltr',\n    editableOrEditingHost: false,\n    typeIndex: undefined,\n    elementIndex: undefined,\n    typeCount: undefined,\n    elementCount: undefined\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, Element, ElementContent, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nimport { Test } from 'unist-util-is';\n\n/** Get the node tree source code string */\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexport type RehypeRewriteOptions = {\n  /**\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\n   * If `selector` is not set then wrap will check for a body all elements.\n   */\n  selector?: string;\n  /** Rewrite Element. */\n  rewrite(node: Root | RootContent, index: number | null, parent: Root | Element | null): void;\n}\n\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\n  const { selector, rewrite } = options || {};\n  return (tree) => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n    if (selector && typeof selector === 'string') {\n      const selected = selectAll(selector, tree);\n      if (selected && selected.length > 0) {\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n      return;\n    }\n\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  }\n}\n\nexport default remarkRewrite;\n","import { Element } from 'hast';\n\nexport const octiconLink: Element = {\n  type: 'element',\n  tagName: 'svg',\n  properties: {\n    className: 'octicon octicon-link',\n    viewBox: '0 0 16 16',\n    version: '1.1',\n    width: '16',\n    height: '16',\n    ariaHidden: 'true',\n  },\n  children: [\n    {\n      type: 'element',\n      tagName: 'path',\n      children: [],\n      properties: {\n        fillRule: 'evenodd',\n        d: 'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z',\n      },\n    },\n  ],\n};\n","import React, { useImperativeHandle } from 'react';\nimport ReactMarkdown, { Options } from 'react-markdown';\nimport { Root, Element, ElementContent } from 'hast';\nimport { PluggableList } from 'unified';\nimport gfm from 'remark-gfm';\nimport slug from 'rehype-slug';\nimport headings from 'rehype-autolink-headings';\nimport rehypeRaw from 'rehype-raw';\nimport rehypeAttrs from 'rehype-attr';\n// @ts-ignore\nimport rehypePrism from '@mapbox/rehype-prism';\nimport rehypeRewrite from 'rehype-rewrite';\nimport { octiconLink } from './nodes/octiconLink';\nimport { copyElement } from './nodes/copy';\nimport './styles/markdown.less';\nimport './styles/markdowncolor.less';\n\nconst rehypeRewriteHandle = (node: ElementContent, index: number | null, parent: Root | Element | null) => {\n  if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n    const child = node.children && (node.children[0] as Element);\n    if (child && child.properties && child.properties.ariaHidden === 'true') {\n      child.properties = { class: 'anchor', ...child.properties };\n      child.children = [octiconLink];\n    }\n  }\n  if (node.type === 'element' && node.tagName === 'pre') {\n    const code = getCodeStr(node.children);\n    node.children.push(copyElement(code));\n  }\n};\n\nconst getCodeStr = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeStr(node.children);\n    }\n  });\n  return code;\n};\n\nexport interface MarkdownPreviewProps extends Omit<Options, 'children'> {\n  prefixCls?: string;\n  className?: string;\n  source?: string;\n  style?: React.CSSProperties;\n  pluginsFilter?: (type: 'rehype' | 'remark', plugin: PluggableList) => PluggableList;\n  warpperElement?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n  onScroll?: (e: React.UIEvent<HTMLDivElement>) => void;\n  onMouseOver?: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nexport interface MarkdownPreviewRef extends MarkdownPreviewProps {\n  mdp: React.RefObject<HTMLDivElement>;\n}\n\nexport default React.forwardRef<MarkdownPreviewRef, MarkdownPreviewProps>((props, ref) => {\n  const {\n    prefixCls = 'wmde-markdown wmde-markdown-color',\n    className,\n    source,\n    style,\n    onScroll,\n    onMouseOver,\n    pluginsFilter,\n    warpperElement = {},\n    ...other\n  } = props;\n  const mdp = React.createRef<HTMLDivElement>();\n  useImperativeHandle(ref, () => ({ ...props, mdp }), [mdp, props]);\n  const cls = `${prefixCls || ''} ${className || ''}`;\n  const rehypePlugins: PluggableList = [\n    [rehypePrism, { ignoreMissing: true }],\n    rehypeRaw,\n    slug,\n    headings,\n    [rehypeRewrite, { rewrite: rehypeRewriteHandle }],\n    [rehypeAttrs, { properties: 'attr' }],\n    ...(other.rehypePlugins || []),\n  ];\n  const remarkPlugins = [...(other.remarkPlugins || []), gfm];\n  return (\n    <div ref={mdp} onScroll={onScroll} onMouseOver={onMouseOver} {...warpperElement} className={cls} style={style}>\n      <ReactMarkdown\n        {...other}\n        rehypePlugins={pluginsFilter ? pluginsFilter('rehype', rehypePlugins) : rehypePlugins}\n        remarkPlugins={pluginsFilter ? pluginsFilter('remark', remarkPlugins) : remarkPlugins}\n        children={source || ''}\n      />\n    </div>\n  );\n});\n","import { Element } from 'hast';\nimport copyTextToClipboard from '@uiw/copy-to-clipboard';\n\nexport function copyElement(str: string = 'test'): Element {\n  return {\n    type: 'element',\n    tagName: 'div',\n    properties: {\n      // @ts-ignore\n      onClick: ({ target }) => {\n        target.classList.add('active');\n        copyTextToClipboard(target.dataset.code as string, function () {\n          setTimeout(() => {\n            target.classList.remove('active');\n          }, 2000);\n        });\n      },\n      'data-code': str,\n      class: 'copied',\n    },\n    children: [\n      {\n        type: 'element',\n        tagName: 'svg',\n        properties: {\n          className: 'octicon-copy',\n          ariaHidden: 'true',\n          viewBox: '0 0 16 16',\n          fill: 'currentColor',\n          height: 12,\n          width: 12,\n        },\n        children: [\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z',\n            },\n            children: [],\n          },\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z',\n            },\n            children: [],\n          },\n        ],\n      },\n      {\n        type: 'element',\n        tagName: 'svg',\n        properties: {\n          className: 'octicon-check',\n          ariaHidden: 'true',\n          viewBox: '0 0 16 16',\n          fill: 'currentColor',\n          height: 12,\n          width: 12,\n        },\n        children: [\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z',\n            },\n            children: [],\n          },\n        ],\n      },\n    ],\n  };\n}\n","// @ts-ignore\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'github-corners': GithubCorners;\n  }\n  namespace JSX {\n    interface IntrinsicElements {\n      'github-corners': Partial<GithubCorners> | {\n        style?: Partial<CSSStyleDeclaration> | React.CSSProperties;\n      };\n    }\n  }\n}\n\nconst GITHUB_CORNERS_TEMPLATE = document.createElement(\"template\");\nGITHUB_CORNERS_TEMPLATE.innerHTML = `\n<style>\n:host a:hover .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n@keyframes octocat-wave {\n  0%, 100% { transform: rotate(0); }\n  20%, 60% { transform: rotate(-25deg); }\n  40%, 80% { transform: rotate(10deg); }\n}\n@media (max-width:500px) {\n  :host a:hover .octo-arm { animation: none; }\n  :host .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n}\n:host svg {\n  z-index: 99;\n  position: fixed;\n  border: 0px;\n  top: 0px;\n}\n</style>\n<svg width=\"54\" height=\"54\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n  <a xlink:href=\"https://github.com/uiwjs/react-github-corners\" target=\"_blank\" rel=\"nofollow sponsored\" style=\"fill: rgb(21, 21, 19); color: rgb(255, 255, 255);\">\n    <g>\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" class=\"octo-arm\" style=\"transform-origin: 130px 106px;\"></path>\n      <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\n    </g>\n  </a>\n</svg>\n`;\n\nexport class GithubCorners extends HTMLElement {\n  /** Sets the z-order of a positioned element and its descendants or flex items. */\n  'z-index'?: string;\n  height?: string | number;\n  width?: string | number;\n  href?: string;\n  color?: string;\n  fill?: string;\n  position?: string;\n  target?: string;\n  top?: string;\n  left?: string;\n  right?: string = '0';\n  bottom?: string;\n  transform?: string;\n  private shadow: ShadowRoot\n  static get observedAttributes(): string[] {\n    return ['style', 'z-index', 'target', 'height', 'width', 'href', 'color', 'fill', 'position', 'top', 'left', 'right', 'bottom', 'transform'];\n  }\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({ mode: 'open' });\n    this.shadow.appendChild(this.ownerDocument.importNode(GITHUB_CORNERS_TEMPLATE.content, true));\n    this.update()\n  }\n  private setAttr(name: string, value: string) {\n    const svg = this.shadow.querySelector('svg');\n    if (/(href)/.test(name.toLocaleLowerCase())) {\n      svg.lastElementChild.setAttribute('xlink:href', value);\n    } else if (/(color|fill)/.test(name.toLocaleLowerCase())) {\n      (svg.firstElementChild as HTMLAnchorElement).style[name as any] = value;\n    } else if (/(z-index|position|top|left|right|bottom|transform)/.test(name.toLocaleLowerCase())) {\n      svg.style[name as any] = value;\n    } else {\n      svg.setAttribute(name, value);\n    }\n  }\n  private update() {\n    ;[...this.getAttributeNames(), 'right'].forEach((name) => {\n      const value = this.getAttribute(name) || this[name as keyof GithubCorners] as any || '';\n      this.setAttr(name, value);\n    });\n  }\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (oldValue !== newValue) {\n      this.setAttr(name, newValue);\n    }\n  }\n}\n\ncustomElements.define('github-corners', GithubCorners);","import React from 'react';\nimport '@uiw/github-corners';\n\nexport interface GitHubCornersProps extends React.AnchorHTMLAttributes<HTMLAnchorElement> {\n  /**\n   * The link to your project page.\n   */\n  href?: string;\n  /**\n   * The width and height of the corner. \n   * Default: `80`\n   */\n  size?: number;\n  /**\n   * The background color of the corner.\n   * Default: `#151513`\n   */\n  bgColor?: string;\n  /**\n   * The Github logo color of the corner.\n   * Default: `#fff`\n   */\n  color?: string;\n  /**\n   * The position of corner. \n   * Default: `right`\n   */\n  position?: 'left' | 'right';\n  /** Is it displayed at the bottom? */\n  bottom?: boolean,\n  /** \n   * It is positioned relative to the initial containing block established.\n   * Default: `false`\n   */\n  fixed?: boolean;\n  /**\n   * Sets the z-order of a positioned element and its descendants or flex items.\n   */\n  zIndex?: number;\n}\n\nexport default function githubCorners(props: GitHubCornersProps) {\n  const { size = 80, fixed = false, bottom, zIndex, className, style, bgColor = '#151513', color = '#fff', position = 'right', ...otherProps } = props;\n  const styl: React.CSSProperties = position === 'left' ? { left: 0, right: 'initial', transform: 'scale(-1, 1)' } : { right: 0, left: 'initial', transform: 'scale(1, 1)' };\n  if (bottom) {\n    styl.bottom = 0;\n    styl.top = 'initial';\n    styl.transform = position === 'left' ? 'scale(-1, -1)' : 'scale(1, -1)';\n  } else {\n    styl.bottom = 'initial';\n    styl.top = 0;\n  }\n  return (\n    <github-corners\n      target=\"__blank\"\n      width={size}\n      height={size}\n      href={props.href}\n      position={fixed ? 'fixed' : 'absolute'}\n      z-index={zIndex}\n      style={style}\n      fill={bgColor}\n      color={color}\n      {...styl}\n      {...otherProps}\n    />\n  );\n}","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#61DAFB\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.3931a054f5ef8356122965d973d55570.svg\";\nexport { ForwardRef as ReactComponent };","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"files\", \"embed\", \"json\", \"query\"];\nimport React, { useEffect, useState } from 'react';\nimport { getParameters } from 'codesandbox-import-utils/lib/api/define';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction request(files) {\n  return fetch('https://codesandbox.io/api/v1/sandboxes/define?json=1', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify({\n      files: files\n    })\n  }).then(x => x.json());\n}\nvar CodeSandbox = props => {\n  var _ref = props || {},\n    {\n      files = {},\n      embed,\n      json,\n      query\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var parameters = getParameters({\n    files\n  });\n  var [url, setUrl] = useState();\n  useEffect(() => {\n    if (!props.children) {\n      request(files).then(data => {\n        if (data && data.sandbox_id) {\n          var cusUrl = \"https://codesandbox.io/\" + (embed ? 'embed' : 's') + \"/\" + data.sandbox_id + \"?\" + (query ? query : '');\n          setUrl(cusUrl);\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [files]);\n  if (!props.children) {\n    return /*#__PURE__*/_jsx(\"iframe\", _extends({}, other, {\n      title: other.title || 'Example.',\n      src: url,\n      style: _extends({\n        width: '100%',\n        height: '100%',\n        border: 0,\n        overflow: 'hidden'\n      }, other.style),\n      allow: \"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\",\n      sandbox: \"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n    }));\n  }\n  return /*#__PURE__*/_jsxs(\"form\", _extends({\n    action: \"https://codesandbox.io/api/v1/sandboxes/define\",\n    method: \"POST\",\n    target: \"_blank\"\n  }, other, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      name: \"parameters\",\n      value: parameters\n    }), embed && /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      name: \"embed\",\n      value: 1\n    }), json && /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      name: \"json\",\n      value: 1\n    }), query && /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      name: \"query\",\n      value: query\n    }), /*#__PURE__*/_jsx(\"button\", {\n      type: \"submit\",\n      children: props.children\n    })]\n  }));\n};\nexport default CodeSandbox;","\nimport CodeSandbox from '../';\n\nconst code = `import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst element = (\n  <h1> Hello, CodeSandbox!  </h1>\n);\n\nReactDOM.render(\n  element,\n  document.getElementById('root')\n);`;\n\nconst Example = () => {\n  return (\n    <CodeSandbox\n      embed\n      query=\"view=split\"\n      files={{\n        \"package.json\": {\n          content: {\n            dependencies: {\n              react: \"latest\",\n              \"react-dom\": \"latest\"\n            }\n          }\n        },\n        \"index.js\": {\n          content: code\n        },\n        \"index.html\": {\n          content: `<div id=\"root\"></div>`\n        }\n      }}\n    >\n      Basic Example Open in CodeSandbox\n    </CodeSandbox>\n  )\n}\n\nexport default Example;","\nimport CodeSandbox from '../';\n\nconst indexCode = `import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);`;\nconst IndexCssCode = `body {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}`\n\nconst AppCode = `import React from \"react\";\nimport logo from \"./logo.svg\";\nimport styles from \"./App.module.less\";\nimport \"./App.css\";\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p className={styles.app}>\n        Edit <code>src/App.js</code> and save to reload.\n      </p>\n      <div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        &nbsp;&nbsp;\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/kktjs\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn KKT\n        </a>\n      </div>\n    </header>\n  </div>\n);\n\nexport default App;`\n\nconst AppModuleLessCode = `.app code {\n  color: red;\n}`\nconst AppCssCode = `.App {\n  text-align: center;\n}\n\n.App-logo {\n  animation: App-logo-spin infinite 20s linear;\n  height: 40vmin;\n}\n\n.App-header {\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}`\n\nconst logoCode = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\">\n<g fill=\"#61DAFB\">\n  <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/>\n  <circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/>\n  <path d=\"M520.5 78.1z\"/>\n</g>\n</svg>`\n\nconst kktrc = `import webpack from \"webpack\";\nimport lessModules from \"@kkt/less-modules\";\nimport pkg from \"./package.json\";\n\nexport default (conf, env, options) => {\n  conf = lessModules(conf, env, options);\n\n  // Get the project version.\n  conf.plugins.push(\n    new webpack.DefinePlugin({\n      VERSION: JSON.stringify(pkg.version)\n    })\n  );\n  return conf;\n};`\n\nconst sandboxCode = `{\n  \"template\": \"node\",\n  \"container\": {\n    \"startScript\": \"start\",\n    \"node\": \"14\"\n  }\n}`\n\nconst Example = () => {\n  return (\n    <CodeSandbox\n      embed\n      query=\"view=split\"\n      files={{\n        \"src/index.js\": {\n          content: indexCode\n        },\n        \"sandbox.config.json\": {\n          content: sandboxCode\n        },\n        \"src/App.js\": {\n          content: AppCode\n        },\n        \"src/logo.svg\": {\n          content: logoCode\n        },\n        \"src/App.module.less\": {\n          content: AppModuleLessCode\n        },\n        \"src/App.css\": {\n          content: AppCssCode\n        },\n        \"src/index.css\": {\n          content: IndexCssCode\n        },\n        \".kktrc.js\": {\n          content: kktrc\n        },\n        \"public/index.html\": {\n          content: `<div id=\"root\"></div>`\n        },\n        \"package.json\": {\n          content: {\n            dependencies: {\n              react: \"latest\",\n              \"react-dom\": \"latest\"\n            },\n            devDependencies: {\n              \"@kkt/less-modules\": \"6.0.11\",\n              \"kkt\": \"6.0.11\",\n              \"typescript\": \"4.1.3\"\n            },\n            \"scripts\": {\n              \"start\": \"kkt start\",\n              \"build\": \"kkt build\",\n              \"test\": \"kkt test --env=jsdom\"\n            },\n            \"browserslist\": [\n              \">0.2%\",\n              \"not dead\",\n              \"not ie <= 11\",\n              \"not op_mini all\"\n            ]\n          }\n        }\n      }}\n    >\n      KKT Project Example Open in CodeSandbox\n    </CodeSandbox>\n  )\n}\n\nexport default Example;","\nimport CodeSandbox from '../';\n\nconst code = `import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst element = (\n  <h1> Hello, CodeSandbox! </h1>\n);\n\nReactDOM.render(\n  element,\n  document.getElementById('root')\n);`;\n\nconst Example = () => {\n  return (\n    <div style={{ height: 400, width: 800 }}>\n      <CodeSandbox\n        embed\n        query=\"view=split&runonclick=1\"\n        files={{\n          \"package.json\": {\n            content: {\n              dependencies: {\n                react: \"latest\",\n                \"react-dom\": \"latest\"\n              }\n            }\n          },\n          \"index.js\": {\n            content: code\n          },\n          \"index.html\": {\n            content: `<div id=\"root\"></div>`\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Example;","import React from 'react';\nimport Markdown from '@uiw/react-markdown-preview';\nimport GitHubCorners from '@uiw/react-github-corners';\nimport logo from './logo.svg';\nimport MDStr from '../README.md';\nimport Example from './Example';\nimport ExampleKKT from './ExampleKKT';\nimport ExampleNoChild from './ExampleNoChild';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <GitHubCorners fixed href=\"https://github.com/uiwjs/react-codesandbox\" target=\"__blank\" />\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h2>React CodeSandbox</h2>\n        <div>\n          <Example />\n          <ExampleKKT />\n          <ExampleNoChild />\n        </div>\n        <span className=\"App-arrow\"></span>\n      </header>\n      <Markdown\n        style={{ paddingTop: 25, maxWidth: 680, margin: '0 auto' }}\n        source={MDStr.replace(/([\\s\\S]*)<!--dividing-->/, '')}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","export default \"React CodeSandbox\\n===\\n\\n<!--dividing-->\\n\\n[![Build & Deploy](https://github.com/uiwjs/react-codesandbox/workflows/Build%20&%20Deploy/badge.svg)](https://github.com/uiwjs/react-codesandbox/actions)\\n[![Issues](https://img.shields.io/github/issues/uiwjs/react-codesandbox.svg)](https://github.com/uiwjs/react-codesandbox/issues)\\n[![Forks](https://img.shields.io/github/forks/uiwjs/react-codesandbox.svg)](https://github.com/uiwjs/react-codesandbox/network)\\n[![Stars](https://img.shields.io/github/stars/uiwjs/react-codesandbox.svg)](https://github.com/uiwjs/react-codesandbox/stargazers)\\n[![Release](https://img.shields.io/github/release/uiwjs/react-codesandbox)](https://github.com/uiwjs/react-codesandbox/releases)\\n[![npm version](https://img.shields.io/npm/v/@uiw/react-codesandbox.svg)](https://www.npmjs.com/package/@uiw/react-codesandbox)\\n\\nA React component is provided that allows you to programmatically generate [codesandbox](https://codesandbox.io/) projects from code samples on the fly.\\n\\n## Install\\n\\n```bash\\nnpm install @uiw/react-codesandbox --save\\n```\\n\\n## Usage\\n\\n```jsx\\nimport React from 'react';\\nimport CodeSandbox from '@uiw/react-codesandbox';\\n\\nconst code = `import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nconst App = (\\n  <h1>\\n    Hello, {formatName(user)}!\\n  </h1>\\n);\\n\\nReactDOM.render(\\n  <App />,\\n  document.getElementById('root')\\n);`;\\n\\nfunction Demo() {\\n  return (\\n    <CodeSandbox\\n      files={{\\n        \\\"package.json\\\": {\\n          content: {\\n            dependencies: {\\n              react: \\\"latest\\\",\\n              \\\"react-dom\\\": \\\"latest\\\"\\n            }\\n          }\\n        },\\n        \\\"index.js\\\": {\\n          content: code\\n        },\\n        \\\"index.html\\\": {\\n          content: `<div id=\\\"root\\\"></div>`\\n        }\\n      }}\\n    >\\n      Open in CodeSandbox\\n    </CodeSandbox>\\n  )\\n}\\n```\\n\\n## Props\\n\\n```typescript\\ntype CodeSandboxProps = React.FormHTMLAttributes<HTMLFormElement> & {\\n  /**\\n   * Whether we should redirect to the embed instead of the editor.\\n   */\\n  embed?: boolean;\\n  /**\\n   * The query that will be used in the redirect url. `embed` must be equal to `true`, `embed=true`.\\n   * [CodeSandbox Embed Options](https://codesandbox.io/docs/embedding#embed-options)\\n   * @example `view=preview&runonclick=1`\\n   */\\n  query?: string;\\n  /**\\n   * Instead of redirecting we will send a JSON reponse with `{\\\"sandbox_id\\\": sandboxId}`.\\n   */\\n  json?: boolean;\\n  /**\\n   * Parameters used to define how the sandbox should be created.\\n   */\\n  files?: Record<string, {\\n    content?: string | Record<string, any>;\\n    isBinary?: boolean;\\n  }>\\n};\\n```\\n\\n## Development\\n\\nRuns the project in development mode.  \\n\\n```bash\\n# Step 1, run first, listen to the component compile and output the .js file\\n# listen for compilation output type .d.ts file\\nnpm run watch\\n# Step 2, development mode, listen to compile preview website instance\\nnpm run start\\n```\\n\\n**production**\\n\\nBuilds the app for production to the build folder.\\n\\n```bash\\nnpm run build\\n```\\n\\nThe build is minified and the filenames include the hashes.\\nYour app is ready to be deployed!\\n\\n### Related\\n\\n- [`@uiw/react-codepen`](https://github.com/uiwjs/react-codepen)\\n- [`@uiw/react-stackblitz`](https://github.com/uiwjs/react-stackblitz)\\n\\n## Contributors\\n\\nAs always, thanks to our amazing contributors!\\n\\n<a href=\\\"https://github.com/uiwjs/react-codepen/graphs/contributors\\\">\\n  <img src=\\\"https://uiwjs.github.io/react-codepen/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\nMade with [github-action-contributors](https://github.com/jaywcjlove/github-action-contributors).\\n\\n## License\\n\\nLicensed under the MIT License.\\n\";","import React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = ReactDOMClient.createRoot(container!);\nroot.render(<App />);","'use strict';\n\nconst visit = require('unist-util-visit');\nconst nodeToString = require('hast-util-to-string');\nconst refractor = require('refractor');\n\nmodule.exports = (options) => {\n  options = options || {};\n\n  if (options.alias) {\n    refractor.alias(options.alias);\n  }\n\n  return (tree) => {\n    visit(tree, 'element', visitor);\n  };\n\n  function visitor(node, index, parent) {\n    if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n      return;\n    }\n\n    const lang = getLanguage(node);\n\n    if (lang === null) {\n      return;\n    }\n\n    let result;\n    try {\n      parent.properties.className = (parent.properties.className || []).concat(\n        'language-' + lang\n      );\n      result = refractor.highlight(nodeToString(node), lang);\n    } catch (err) {\n      if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n        return;\n      }\n      throw err;\n    }\n\n    node.children = result;\n  }\n};\n\nfunction getLanguage(node) {\n  const className = node.properties.className || [];\n\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase();\n    }\n  }\n\n  return null;\n}\n","/**\n * *** This styling is an extra step which is likely not required. ***\n * https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard\n * \n * Why is it here? To ensure:\n * \n * 1. the element is able to have focus and selection.\n * 2. if element was to flash render it has minimal visual impact.\n * 3. less flakyness with selection and copying which **might** occur if\n *     the textarea element is not visible.\n *\n *   The likelihood is the element won't even render, not even a flash,\n *   so some of these are just precautions. However in IE the element\n *   is visible whilst the popup box asking the user for permission for\n *   the web page to copy to the clipboard.\n *  \n *   Place in top-left corner of screen regardless of scroll position.\n *\n * @typedef CopyTextToClipboard\n * @property {(text: string, method?: (isCopy: boolean) => void) => void} void\n * @returns {void}\n * \n * @param {string} text \n * @param {CopyTextToClipboard} cb \n */\nexport default function copyTextToClipboard(text, cb) {\n  const el = document.createElement('textarea');\n  el.value = text;\n  el.setAttribute('readonly', '');\n  el.style = {\n    position: 'absolute',\n    left: '-9999px',\n  }\n  document.body.appendChild(el);\n  const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n  el.select();\n  let isCopy = false;\n  try {\n    const successful = document.execCommand('copy');\n    isCopy = !!successful;\n  } catch (err) {\n    isCopy = false;\n  }\n  document.body.removeChild(el);\n  if (selected && document.getSelection) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n  }\n  cb && cb(isCopy);\n};\n","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};",null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_context_1 = require(\"./parser-context\");\nvar render_1 = require(\"./render\");\nvar CssSelectorParser = /** @class */ (function () {\n    function CssSelectorParser() {\n        this.pseudos = {};\n        this.attrEqualityMods = {};\n        this.ruleNestingOperators = {};\n        this.substitutesEnabled = false;\n    }\n    CssSelectorParser.prototype.registerSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_1 = pseudos; _a < pseudos_1.length; _a++) {\n            var pseudo = pseudos_1[_a];\n            this.pseudos[pseudo] = 'selector';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_2 = pseudos; _a < pseudos_2.length; _a++) {\n            var pseudo = pseudos_2[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_3 = pseudos; _a < pseudos_3.length; _a++) {\n            var pseudo = pseudos_3[_a];\n            this.pseudos[pseudo] = 'numeric';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_4 = pseudos; _a < pseudos_4.length; _a++) {\n            var pseudo = pseudos_4[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_1 = operators; _a < operators_1.length; _a++) {\n            var operator = operators_1[_a];\n            this.ruleNestingOperators[operator] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_2 = operators; _a < operators_2.length; _a++) {\n            var operator = operators_2[_a];\n            delete this.ruleNestingOperators[operator];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_1 = mods; _a < mods_1.length; _a++) {\n            var mod = mods_1[_a];\n            this.attrEqualityMods[mod] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_2 = mods; _a < mods_2.length; _a++) {\n            var mod = mods_2[_a];\n            delete this.attrEqualityMods[mod];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.enableSubstitutes = function () {\n        this.substitutesEnabled = true;\n        return this;\n    };\n    CssSelectorParser.prototype.disableSubstitutes = function () {\n        this.substitutesEnabled = false;\n        return this;\n    };\n    CssSelectorParser.prototype.parse = function (str) {\n        return parser_context_1.parseCssSelector(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n    };\n    CssSelectorParser.prototype.render = function (path) {\n        return render_1.renderEntity(path).trim();\n    };\n    return CssSelectorParser;\n}());\nexports.CssSelectorParser = CssSelectorParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction parseCssSelector(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n    var l = str.length;\n    var chr = '';\n    function getStr(quote, escapeTable) {\n        var result = '';\n        pos++;\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (chr === quote) {\n                pos++;\n                return result;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                chr = str.charAt(pos);\n                var esc = void 0;\n                if (chr === quote) {\n                    result += quote;\n                }\n                else if ((esc = escapeTable[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function getIdent() {\n        var result = '';\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (utils_1.isIdent(chr)) {\n                result += chr;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                if (pos >= l) {\n                    throw Error('Expected symbol but end of file reached.');\n                }\n                chr = str.charAt(pos);\n                if (utils_1.identSpecialChars[chr]) {\n                    result += chr;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                return result;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function skipWhitespace() {\n        chr = str.charAt(pos);\n        var result = false;\n        while (chr === ' ' || chr === \"\\t\" || chr === \"\\n\" || chr === \"\\r\" || chr === \"\\f\") {\n            result = true;\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function parse() {\n        var res = parseSelector();\n        if (pos < l) {\n            throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n        }\n        return res;\n    }\n    function parseSelector() {\n        var selector = parseSingleSelector();\n        if (!selector) {\n            return null;\n        }\n        var res = selector;\n        chr = str.charAt(pos);\n        while (chr === ',') {\n            pos++;\n            skipWhitespace();\n            if (res.type !== 'selectors') {\n                res = {\n                    type: 'selectors',\n                    selectors: [selector]\n                };\n            }\n            selector = parseSingleSelector();\n            if (!selector) {\n                throw Error('Rule expected after \",\".');\n            }\n            res.selectors.push(selector);\n        }\n        return res;\n    }\n    function parseSingleSelector() {\n        skipWhitespace();\n        var selector = {\n            type: 'ruleSet'\n        };\n        var rule = parseRule();\n        if (!rule) {\n            return null;\n        }\n        var currentRule = selector;\n        while (rule) {\n            rule.type = 'rule';\n            currentRule.rule = rule;\n            currentRule = rule;\n            skipWhitespace();\n            chr = str.charAt(pos);\n            if (pos >= l || chr === ',' || chr === ')') {\n                break;\n            }\n            if (ruleNestingOperators[chr]) {\n                var op = chr;\n                pos++;\n                skipWhitespace();\n                rule = parseRule();\n                if (!rule) {\n                    throw Error('Rule expected after \"' + op + '\".');\n                }\n                rule.nestingOperator = op;\n            }\n            else {\n                rule = parseRule();\n                if (rule) {\n                    rule.nestingOperator = null;\n                }\n            }\n        }\n        return selector;\n    }\n    // @ts-ignore no-overlap\n    function parseRule() {\n        var rule = null;\n        while (pos < l) {\n            chr = str.charAt(pos);\n            if (chr === '*') {\n                pos++;\n                (rule = rule || {}).tagName = '*';\n            }\n            else if (utils_1.isIdentStart(chr) || chr === '\\\\') {\n                (rule = rule || {}).tagName = getIdent();\n            }\n            else if (chr === '.') {\n                pos++;\n                rule = rule || {};\n                (rule.classNames = rule.classNames || []).push(getIdent());\n            }\n            else if (chr === '#') {\n                pos++;\n                (rule = rule || {}).id = getIdent();\n            }\n            else if (chr === '[') {\n                pos++;\n                skipWhitespace();\n                var attr = {\n                    name: getIdent()\n                };\n                skipWhitespace();\n                // @ts-ignore\n                if (chr === ']') {\n                    pos++;\n                }\n                else {\n                    var operator = '';\n                    if (attrEqualityMods[chr]) {\n                        operator = chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \"=\" but end of file reached.');\n                    }\n                    if (chr !== '=') {\n                        throw Error('Expected \"=\" but \"' + chr + '\" found.');\n                    }\n                    attr.operator = operator + '=';\n                    pos++;\n                    skipWhitespace();\n                    var attrValue = '';\n                    attr.valueType = 'string';\n                    // @ts-ignore\n                    if (chr === '\"') {\n                        attrValue = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (chr === '\\'') {\n                        attrValue = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (substitutesEnabled && chr === '$') {\n                        pos++;\n                        attrValue = getIdent();\n                        attr.valueType = 'substitute';\n                    }\n                    else {\n                        while (pos < l) {\n                            if (chr === ']') {\n                                break;\n                            }\n                            attrValue += chr;\n                            pos++;\n                            chr = str.charAt(pos);\n                        }\n                        attrValue = attrValue.trim();\n                    }\n                    skipWhitespace();\n                    if (pos >= l) {\n                        throw Error('Expected \"]\" but end of file reached.');\n                    }\n                    if (chr !== ']') {\n                        throw Error('Expected \"]\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    attr.value = attrValue;\n                }\n                rule = rule || {};\n                (rule.attrs = rule.attrs || []).push(attr);\n            }\n            else if (chr === ':') {\n                pos++;\n                var pseudoName = getIdent();\n                var pseudo = {\n                    name: pseudoName\n                };\n                // @ts-ignore\n                if (chr === '(') {\n                    pos++;\n                    var value = '';\n                    skipWhitespace();\n                    if (pseudos[pseudoName] === 'selector') {\n                        pseudo.valueType = 'selector';\n                        value = parseSelector();\n                    }\n                    else {\n                        pseudo.valueType = pseudos[pseudoName] || 'string';\n                        // @ts-ignore\n                        if (chr === '\"') {\n                            value = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (chr === '\\'') {\n                            value = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (substitutesEnabled && chr === '$') {\n                            pos++;\n                            value = getIdent();\n                            pseudo.valueType = 'substitute';\n                        }\n                        else {\n                            while (pos < l) {\n                                if (chr === ')') {\n                                    break;\n                                }\n                                value += chr;\n                                pos++;\n                                chr = str.charAt(pos);\n                            }\n                            value = value.trim();\n                        }\n                        skipWhitespace();\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \")\" but end of file reached.');\n                    }\n                    if (chr !== ')') {\n                        throw Error('Expected \")\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    pseudo.value = value;\n                }\n                rule = rule || {};\n                (rule.pseudos = rule.pseudos || []).push(pseudo);\n            }\n            else {\n                break;\n            }\n        }\n        return rule;\n    }\n    return parse();\n}\nexports.parseCssSelector = parseCssSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction renderEntity(entity) {\n    var res = '';\n    switch (entity.type) {\n        case 'ruleSet':\n            var currentEntity = entity.rule;\n            var parts = [];\n            while (currentEntity) {\n                if (currentEntity.nestingOperator) {\n                    parts.push(currentEntity.nestingOperator);\n                }\n                parts.push(renderEntity(currentEntity));\n                currentEntity = currentEntity.rule;\n            }\n            res = parts.join(' ');\n            break;\n        case 'selectors':\n            res = entity.selectors.map(renderEntity).join(', ');\n            break;\n        case 'rule':\n            if (entity.tagName) {\n                if (entity.tagName === '*') {\n                    res = '*';\n                }\n                else {\n                    res = utils_1.escapeIdentifier(entity.tagName);\n                }\n            }\n            if (entity.id) {\n                res += \"#\" + utils_1.escapeIdentifier(entity.id);\n            }\n            if (entity.classNames) {\n                res += entity.classNames.map(function (cn) {\n                    return \".\" + (utils_1.escapeIdentifier(cn));\n                }).join('');\n            }\n            if (entity.attrs) {\n                res += entity.attrs.map(function (attr) {\n                    if ('operator' in attr) {\n                        if (attr.valueType === 'substitute') {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + \"$\" + attr.value + \"]\";\n                        }\n                        else {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + utils_1.escapeStr(attr.value) + \"]\";\n                        }\n                    }\n                    else {\n                        return \"[\" + utils_1.escapeIdentifier(attr.name) + \"]\";\n                    }\n                }).join('');\n            }\n            if (entity.pseudos) {\n                res += entity.pseudos.map(function (pseudo) {\n                    if (pseudo.valueType) {\n                        if (pseudo.valueType === 'selector') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + renderEntity(pseudo.value) + \")\";\n                        }\n                        else if (pseudo.valueType === 'substitute') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"($\" + pseudo.value + \")\";\n                        }\n                        else if (pseudo.valueType === 'numeric') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + pseudo.value + \")\";\n                        }\n                        else {\n                            return (\":\" + utils_1.escapeIdentifier(pseudo.name) +\n                                \"(\" + utils_1.escapeIdentifier(pseudo.value) + \")\");\n                        }\n                    }\n                    else {\n                        return \":\" + utils_1.escapeIdentifier(pseudo.name);\n                    }\n                }).join('');\n            }\n            break;\n        default:\n            throw Error('Unknown entity type: \"' + entity.type + '\".');\n    }\n    return res;\n}\nexports.renderEntity = renderEntity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c === '-') || (c === '_');\n}\nexports.isIdentStart = isIdentStart;\nfunction isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexports.isIdent = isIdent;\nfunction isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexports.isHex = isHex;\nfunction escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (exports.identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' || chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xF800) === 0xD800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xFC00) !== 0xD800 || (extraCharCode & 0xFC00) !== 0xDC00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3FF) << 10) + (extraCharCode & 0x3FF) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result;\n}\nexports.escapeIdentifier = escapeIdentifier;\nfunction escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = exports.strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\" + result + \"\\\"\";\n}\nexports.escapeStr = escapeStr;\nexports.identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    '$': true,\n    '%': true,\n    '&': true,\n    '\\'': true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexports.strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexports.singleQuoteEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\\'': '\\''\n};\nexports.doubleQuotesEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\"': '\"'\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","const regex = require('./regex.js')\n\nmodule.exports = BananaSlug\n\nconst own = Object.hasOwnProperty\n\nfunction BananaSlug () {\n  const self = this\n\n  if (!(self instanceof BananaSlug)) return new BananaSlug()\n\n  self.reset()\n}\n\n/**\n * Generate a unique slug.\n * @param  {string} value String of text to slugify\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\n * @return {string}       A unique slug string\n */\nBananaSlug.prototype.slug = function (value, maintainCase) {\n  const self = this\n  let slug = slugger(value, maintainCase === true)\n  const originalSlug = slug\n\n  while (own.call(self.occurrences, slug)) {\n    self.occurrences[originalSlug]++\n    slug = originalSlug + '-' + self.occurrences[originalSlug]\n  }\n\n  self.occurrences[slug] = 0\n\n  return slug\n}\n\n/**\n * Reset - Forget all previous slugs\n * @return void\n */\nBananaSlug.prototype.reset = function () {\n  this.occurrences = Object.create(null)\n}\n\nfunction slugger (string, maintainCase) {\n  if (typeof string !== 'string') return ''\n  if (!maintainCase) string = string.toLowerCase()\n  return string.replace(regex, '').replace(/ /g, '-')\n}\n\nBananaSlug.slug = slugger\n","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nmodule.exports = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","'use strict'\n\nmodule.exports = parse\n\nvar search = /[#.]/g\n\n// Create a hast element from a simple CSS selector.\nfunction parse(selector, defaultTagName) {\n  var value = selector || ''\n  var name = defaultTagName || 'div'\n  var props = {}\n  var start = 0\n  var subvalue\n  var previous\n  var match\n\n  while (start < value.length) {\n    search.lastIndex = start\n    match = search.exec(value)\n    subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        name = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (props.className) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {type: 'element', tagName: name, properties: props, children: []}\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   var h = require('hastscript')\n *   var toString = require('hast-util-to-string')\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n'use strict'\n\nmodule.exports = toString\n\nfunction toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return node.children ? all(node) : ''\n}\n\nfunction all(node) {\n  var children = node.children\n  var length = children.length\n  var index = -1\n  var result = []\n\n  while (++index < length) {\n    result[index] = one(children[index])\n  }\n\n  return result.join('')\n}\n","'use strict'\n\nvar find = require('property-information/find')\nvar normalize = require('property-information/normalize')\nvar parseSelector = require('hast-util-parse-selector')\nvar spaces = require('space-separated-tokens').parse\nvar commas = require('comma-separated-tokens').parse\n\nmodule.exports = factory\n\nvar own = {}.hasOwnProperty\n\nfunction factory(schema, defaultTagName, caseSensitive) {\n  var adjust = caseSensitive ? createAdjustMap(caseSensitive) : null\n\n  return h\n\n  // Hyperscript compatible DSL for creating virtual hast trees.\n  function h(selector, properties) {\n    var node = parseSelector(selector, defaultTagName)\n    var children = Array.prototype.slice.call(arguments, 2)\n    var name = node.tagName.toLowerCase()\n    var property\n\n    node.tagName = adjust && own.call(adjust, name) ? adjust[name] : name\n\n    if (properties && isChildren(properties, node)) {\n      children.unshift(properties)\n      properties = null\n    }\n\n    if (properties) {\n      for (property in properties) {\n        addProperty(node.properties, property, properties[property])\n      }\n    }\n\n    addChild(node.children, children)\n\n    if (node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  function addProperty(properties, key, value) {\n    var info\n    var property\n    var result\n\n    // Ignore nullish and NaN values.\n    if (value === null || value === undefined || value !== value) {\n      return\n    }\n\n    info = find(schema, key)\n    property = info.property\n    result = value\n\n    // Handle list values.\n    if (typeof result === 'string') {\n      if (info.spaceSeparated) {\n        result = spaces(result)\n      } else if (info.commaSeparated) {\n        result = commas(result)\n      } else if (info.commaOrSpaceSeparated) {\n        result = spaces(commas(result).join(' '))\n      }\n    }\n\n    // Accept `object` on style.\n    if (property === 'style' && typeof value !== 'string') {\n      result = style(result)\n    }\n\n    // Class-names (which can be added both on the `selector` and here).\n    if (property === 'className' && properties.className) {\n      result = properties.className.concat(result)\n    }\n\n    properties[property] = parsePrimitives(info, property, result)\n  }\n}\n\nfunction isChildren(value, node) {\n  return (\n    typeof value === 'string' ||\n    'length' in value ||\n    isNode(node.tagName, value)\n  )\n}\n\nfunction isNode(tagName, value) {\n  var type = value.type\n\n  if (tagName === 'input' || !type || typeof type !== 'string') {\n    return false\n  }\n\n  if (typeof value.children === 'object' && 'length' in value.children) {\n    return true\n  }\n\n  type = type.toLowerCase()\n\n  if (tagName === 'button') {\n    return (\n      type !== 'menu' &&\n      type !== 'submit' &&\n      type !== 'reset' &&\n      type !== 'button'\n    )\n  }\n\n  return 'value' in value\n}\n\nfunction addChild(nodes, value) {\n  var index\n  var length\n\n  if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n    return\n  }\n\n  if (typeof value === 'object' && 'length' in value) {\n    index = -1\n    length = value.length\n\n    while (++index < length) {\n      addChild(nodes, value[index])\n    }\n\n    return\n  }\n\n  if (typeof value !== 'object' || !('type' in value)) {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n\n  nodes.push(value)\n}\n\n// Parse a (list of) primitives.\nfunction parsePrimitives(info, name, value) {\n  var index\n  var length\n  var result\n\n  if (typeof value !== 'object' || !('length' in value)) {\n    return parsePrimitive(info, name, value)\n  }\n\n  length = value.length\n  index = -1\n  result = []\n\n  while (++index < length) {\n    result[index] = parsePrimitive(info, name, value[index])\n  }\n\n  return result\n}\n\n// Parse a single primitives.\nfunction parsePrimitive(info, name, value) {\n  var result = value\n\n  if (info.number || info.positiveNumber) {\n    if (!isNaN(result) && result !== '') {\n      result = Number(result)\n    }\n  } else if (info.boolean || info.overloadedBoolean) {\n    // Accept `boolean` and `string`.\n    if (\n      typeof result === 'string' &&\n      (result === '' || normalize(value) === normalize(name))\n    ) {\n      result = true\n    }\n  }\n\n  return result\n}\n\nfunction style(value) {\n  var result = []\n  var key\n\n  for (key in value) {\n    result.push([key, value[key]].join(': '))\n  }\n\n  return result.join('; ')\n}\n\nfunction createAdjustMap(values) {\n  var length = values.length\n  var index = -1\n  var result = {}\n  var value\n\n  while (++index < length) {\n    value = values[index]\n    result[value.toLowerCase()] = value\n  }\n\n  return result\n}\n","'use strict'\n\nvar schema = require('property-information/html')\nvar factory = require('./factory')\n\nvar html = factory(schema, 'div')\nhtml.displayName = 'html'\n\nmodule.exports = html\n","'use strict'\n\nmodule.exports = require('./html')\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar comma = ','\nvar space = ' '\nvar empty = ''\n\n// Parse comma-separated tokens to an array.\nfunction parse(value) {\n  var values = []\n  var input = String(value || empty)\n  var index = input.indexOf(comma)\n  var lastIndex = 0\n  var end = false\n  var val\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    val = input.slice(lastIndex, index).trim()\n\n    if (val || !end) {\n      values.push(val)\n    }\n\n    lastIndex = index + 1\n    index = input.indexOf(comma, lastIndex)\n  }\n\n  return values\n}\n\n// Compile an array to comma-separated tokens.\n// `options.padLeft` (default: `true`) pads a space left of each token, and\n// `options.padRight` (default: `false`) pads a space to the right of each token.\nfunction stringify(values, options) {\n  var settings = options || {}\n  var left = settings.padLeft === false ? empty : space\n  var right = settings.padRight ? space : empty\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty)\n  }\n\n  return values.join(right + comma + left).trim()\n}\n","'use strict'\n\nvar normalize = require('./normalize')\nvar DefinedInfo = require('./lib/util/defined-info')\nvar Info = require('./lib/util/info')\n\nvar data = 'data'\n\nmodule.exports = find\n\nvar valid = /^data[-\\w.:]+$/i\nvar dash = /-[a-z]/g\nvar cap = /[A-Z]/g\n\nfunction find(schema, value) {\n  var normal = normalize(value)\n  var prop = value\n  var Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === data && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value)\n    } else {\n      value = datasetToAttribute(value)\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase)\n  return data + value.charAt(0).toUpperCase() + value.slice(1)\n}\n\nfunction datasetToAttribute(property) {\n  var value = property.slice(4)\n\n  if (dash.test(value)) {\n    return property\n  }\n\n  value = value.replace(cap, kebab)\n\n  if (value.charAt(0) !== '-') {\n    value = '-' + value\n  }\n\n  return data + value\n}\n\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","'use strict'\n\nvar merge = require('./lib/util/merge')\nvar xlink = require('./lib/xlink')\nvar xml = require('./lib/xml')\nvar xmlns = require('./lib/xmlns')\nvar aria = require('./lib/aria')\nvar html = require('./lib/html')\n\nmodule.exports = merge([xml, xlink, xmlns, aria, html])\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\n\nvar booleanish = types.booleanish\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\n\nmodule.exports = create({\n  transform: ariaTransform,\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n\nfunction ariaTransform(_, prop) {\n  return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n}\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform')\n\nvar boolean = types.boolean\nvar overloadedBoolean = types.overloadedBoolean\nvar booleanish = types.booleanish\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\nvar commaSeparated = types.commaSeparated\n\nmodule.exports = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: commaSeparated,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextMenu: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: commaSeparated,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","'use strict'\n\nvar caseSensitiveTransform = require('./case-sensitive-transform')\n\nmodule.exports = caseInsensitiveTransform\n\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","'use strict'\n\nmodule.exports = caseSensitiveTransform\n\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","'use strict'\n\nvar normalize = require('../../normalize')\nvar Schema = require('./schema')\nvar DefinedInfo = require('./defined-info')\n\nmodule.exports = create\n\nfunction create(definition) {\n  var space = definition.space\n  var mustUseProperty = definition.mustUseProperty || []\n  var attributes = definition.attributes || {}\n  var props = definition.properties\n  var transform = definition.transform\n  var property = {}\n  var normal = {}\n  var prop\n  var info\n\n  for (prop in props) {\n    info = new DefinedInfo(\n      prop,\n      transform(attributes, prop),\n      props[prop],\n      space\n    )\n\n    if (mustUseProperty.indexOf(prop) !== -1) {\n      info.mustUseProperty = true\n    }\n\n    property[prop] = info\n\n    normal[normalize(prop)] = prop\n    normal[normalize(info.attribute)] = prop\n  }\n\n  return new Schema(property, normal, space)\n}\n","'use strict'\n\nvar Info = require('./info')\nvar types = require('./types')\n\nmodule.exports = DefinedInfo\n\nDefinedInfo.prototype = new Info()\nDefinedInfo.prototype.defined = true\n\nvar checks = [\n  'boolean',\n  'booleanish',\n  'overloadedBoolean',\n  'number',\n  'commaSeparated',\n  'spaceSeparated',\n  'commaOrSpaceSeparated'\n]\nvar checksLength = checks.length\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  var index = -1\n  var check\n\n  mark(this, 'space', space)\n\n  Info.call(this, property, attribute)\n\n  while (++index < checksLength) {\n    check = checks[index]\n    mark(this, check, (mask & types[check]) === types[check])\n  }\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","'use strict'\n\nmodule.exports = Info\n\nvar proto = Info.prototype\n\nproto.space = null\nproto.attribute = null\nproto.property = null\nproto.boolean = false\nproto.booleanish = false\nproto.overloadedBoolean = false\nproto.number = false\nproto.commaSeparated = false\nproto.spaceSeparated = false\nproto.commaOrSpaceSeparated = false\nproto.mustUseProperty = false\nproto.defined = false\n\nfunction Info(property, attribute) {\n  this.property = property\n  this.attribute = attribute\n}\n","'use strict'\n\nvar xtend = require('xtend')\nvar Schema = require('./schema')\n\nmodule.exports = merge\n\nfunction merge(definitions) {\n  var length = definitions.length\n  var property = []\n  var normal = []\n  var index = -1\n  var info\n  var space\n\n  while (++index < length) {\n    info = definitions[index]\n    property.push(info.property)\n    normal.push(info.normal)\n    space = info.space\n  }\n\n  return new Schema(\n    xtend.apply(null, property),\n    xtend.apply(null, normal),\n    space\n  )\n}\n","'use strict'\n\nmodule.exports = Schema\n\nvar proto = Schema.prototype\n\nproto.space = null\nproto.normal = {}\nproto.property = {}\n\nfunction Schema(property, normal, space) {\n  this.property = property\n  this.normal = normal\n\n  if (space) {\n    this.space = space\n  }\n}\n","'use strict'\n\nvar powers = 0\n\nexports.boolean = increment()\nexports.booleanish = increment()\nexports.overloadedBoolean = increment()\nexports.number = increment()\nexports.spaceSeparated = increment()\nexports.commaSeparated = increment()\nexports.commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return Math.pow(2, ++powers)\n}\n","'use strict'\n\nvar create = require('./util/create')\n\nmodule.exports = create({\n  space: 'xlink',\n  transform: xlinkTransform,\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n\nfunction xlinkTransform(_, prop) {\n  return 'xlink:' + prop.slice(5).toLowerCase()\n}\n","'use strict'\n\nvar create = require('./util/create')\n\nmodule.exports = create({\n  space: 'xml',\n  transform: xmlTransform,\n  properties: {\n    xmlLang: null,\n    xmlBase: null,\n    xmlSpace: null\n  }\n})\n\nfunction xmlTransform(_, prop) {\n  return 'xml:' + prop.slice(3).toLowerCase()\n}\n","'use strict'\n\nvar create = require('./util/create')\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform')\n\nmodule.exports = create({\n  space: 'xmlns',\n  attributes: {\n    xmlnsxlink: 'xmlns:xlink'\n  },\n  transform: caseInsensitiveTransform,\n  properties: {\n    xmlns: null,\n    xmlnsXLink: null\n  }\n})\n","'use strict'\n\nmodule.exports = normalize\n\nfunction normalize(value) {\n  return value.toLowerCase()\n}\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar empty = ''\nvar space = ' '\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g\n\nfunction parse(value) {\n  var input = String(value || empty).trim()\n  return input === empty ? [] : input.split(whiteSpace)\n}\n\nfunction stringify(values) {\n  return values.join(space).trim()\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","'use strict'\n\nmodule.exports = alphabetical\n\n// Check if the given character code, or the character code at the first\n// character, is alphabetical.\nfunction alphabetical(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","'use strict'\n\nvar alphabetical = require('is-alphabetical')\nvar decimal = require('is-decimal')\n\nmodule.exports = alphanumerical\n\n// Check if the given character code, or the character code at the first\n// character, is alphanumerical.\nfunction alphanumerical(character) {\n  return alphabetical(character) || decimal(character)\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict'\n\nmodule.exports = decimal\n\n// Check if the given character code, or the character code at the first\n// character, is decimal.\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","'use strict'\n\nmodule.exports = hexadecimal\n\n// Check if the given character code, or the character code at the first\n// character, is hexadecimal.\nfunction hexadecimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nvar legacy = require('character-entities-legacy')\nvar invalid = require('character-reference-invalid')\nvar decimal = require('is-decimal')\nvar hexadecimal = require('is-hexadecimal')\nvar alphanumerical = require('is-alphanumerical')\nvar decodeEntity = require('./decode-entity')\n\nmodule.exports = parseEntities\n\nvar own = {}.hasOwnProperty\nvar fromCharCode = String.fromCharCode\nvar noop = Function.prototype\n\n// Default settings.\nvar defaults = {\n  warning: null,\n  reference: null,\n  text: null,\n  warningContext: null,\n  referenceContext: null,\n  textContext: null,\n  position: {},\n  additional: null,\n  attribute: false,\n  nonTerminated: true\n}\n\n// Characters.\nvar tab = 9 // '\\t'\nvar lineFeed = 10 // '\\n'\nvar formFeed = 12 // '\\f'\nvar space = 32 // ' '\nvar ampersand = 38 // '&'\nvar semicolon = 59 // ';'\nvar lessThan = 60 // '<'\nvar equalsTo = 61 // '='\nvar numberSign = 35 // '#'\nvar uppercaseX = 88 // 'X'\nvar lowercaseX = 120 // 'x'\nvar replacementCharacter = 65533 // '�'\n\n// Reference types.\nvar name = 'named'\nvar hexa = 'hexadecimal'\nvar deci = 'decimal'\n\n// Map of bases.\nvar bases = {}\n\nbases[hexa] = 16\nbases[deci] = 10\n\n// Map of types to tests.\n// Each type of character reference accepts different characters.\n// This test is used to detect whether a reference has ended (as the semicolon\n// is not strictly needed).\nvar tests = {}\n\ntests[name] = alphanumerical\ntests[deci] = decimal\ntests[hexa] = hexadecimal\n\n// Warning types.\nvar namedNotTerminated = 1\nvar numericNotTerminated = 2\nvar namedEmpty = 3\nvar numericEmpty = 4\nvar namedUnknown = 5\nvar numericDisallowed = 6\nvar numericProhibited = 7\n\n// Warning messages.\nvar messages = {}\n\nmessages[namedNotTerminated] =\n  'Named character references must be terminated by a semicolon'\nmessages[numericNotTerminated] =\n  'Numeric character references must be terminated by a semicolon'\nmessages[namedEmpty] = 'Named character references cannot be empty'\nmessages[numericEmpty] = 'Numeric character references cannot be empty'\nmessages[namedUnknown] = 'Named character references must be known'\nmessages[numericDisallowed] =\n  'Numeric character references cannot be disallowed'\nmessages[numericProhibited] =\n  'Numeric character references cannot be outside the permissible Unicode range'\n\n// Wrap to ensure clean parameters are given to `parse`.\nfunction parseEntities(value, options) {\n  var settings = {}\n  var option\n  var key\n\n  if (!options) {\n    options = {}\n  }\n\n  for (key in defaults) {\n    option = options[key]\n    settings[key] =\n      option === null || option === undefined ? defaults[key] : option\n  }\n\n  if (settings.position.indent || settings.position.start) {\n    settings.indent = settings.position.indent || []\n    settings.position = settings.position.start\n  }\n\n  return parse(value, settings)\n}\n\n// Parse entities.\n// eslint-disable-next-line complexity\nfunction parse(value, settings) {\n  var additional = settings.additional\n  var nonTerminated = settings.nonTerminated\n  var handleText = settings.text\n  var handleReference = settings.reference\n  var handleWarning = settings.warning\n  var textContext = settings.textContext\n  var referenceContext = settings.referenceContext\n  var warningContext = settings.warningContext\n  var pos = settings.position\n  var indent = settings.indent || []\n  var length = value.length\n  var index = 0\n  var lines = -1\n  var column = pos.column || 1\n  var line = pos.line || 1\n  var queue = ''\n  var result = []\n  var entityCharacters\n  var namedEntity\n  var terminated\n  var characters\n  var character\n  var reference\n  var following\n  var warning\n  var reason\n  var output\n  var entity\n  var begin\n  var start\n  var type\n  var test\n  var prev\n  var next\n  var diff\n  var end\n\n  if (typeof additional === 'string') {\n    additional = additional.charCodeAt(0)\n  }\n\n  // Cache the current point.\n  prev = now()\n\n  // Wrap `handleWarning`.\n  warning = handleWarning ? parseError : noop\n\n  // Ensure the algorithm walks over the first character and the end\n  // (inclusive).\n  index--\n  length++\n\n  while (++index < length) {\n    // If the previous character was a newline.\n    if (character === lineFeed) {\n      column = indent[lines] || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === ampersand) {\n      following = value.charCodeAt(index + 1)\n\n      // The behaviour depends on the identity of the next character.\n      if (\n        following === tab ||\n        following === lineFeed ||\n        following === formFeed ||\n        following === space ||\n        following === ampersand ||\n        following === lessThan ||\n        following !== following ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n\n        continue\n      }\n\n      start = index + 1\n      begin = start\n      end = start\n\n      if (following === numberSign) {\n        // Numerical entity.\n        end = ++begin\n\n        // The behaviour further depends on the next character.\n        following = value.charCodeAt(end)\n\n        if (following === uppercaseX || following === lowercaseX) {\n          // ASCII hex digits.\n          type = hexa\n          end = ++begin\n        } else {\n          // ASCII digits.\n          type = deci\n        }\n      } else {\n        // Named entity.\n        type = name\n      }\n\n      entityCharacters = ''\n      entity = ''\n      characters = ''\n      test = tests[type]\n      end--\n\n      while (++end < length) {\n        following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === name && own.call(legacy, characters)) {\n          entityCharacters = characters\n          entity = legacy[characters]\n        }\n      }\n\n      terminated = value.charCodeAt(end) === semicolon\n\n      if (terminated) {\n        end++\n\n        namedEntity = type === name ? decodeEntity(characters) : false\n\n        if (namedEntity) {\n          entityCharacters = characters\n          entity = namedEntity\n        }\n      }\n\n      diff = 1 + end - start\n\n      if (!terminated && !nonTerminated) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) entity is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== name) {\n          warning(numericEmpty, diff)\n        }\n      } else if (type === name) {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !entity) {\n          warning(namedUnknown, 1)\n        } else {\n          // If theres something after an entity name which is not known, cap\n          // the reference.\n          if (entityCharacters !== characters) {\n            end = begin + entityCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            reason = entityCharacters ? namedNotTerminated : namedEmpty\n\n            if (settings.attribute) {\n              following = value.charCodeAt(end)\n\n              if (following === equalsTo) {\n                warning(reason, diff)\n                entity = null\n              } else if (alphanumerical(following)) {\n                entity = null\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = entity\n      } else {\n        if (!terminated) {\n          // All non-terminated numeric entities are not rendered, and trigger a\n          // warning.\n          warning(numericNotTerminated, diff)\n        }\n\n        // When terminated and number, parse as either hexadecimal or decimal.\n        reference = parseInt(characters, bases[type])\n\n        // Trigger a warning when the parsed number is prohibited, and replace\n        // with replacement character.\n        if (prohibited(reference)) {\n          warning(numericProhibited, diff)\n          reference = fromCharCode(replacementCharacter)\n        } else if (reference in invalid) {\n          // Trigger a warning when the parsed number is disallowed, and replace\n          // by an alternative.\n          warning(numericDisallowed, diff)\n          reference = invalid[reference]\n        } else {\n          // Parse the number.\n          output = ''\n\n          // Trigger a warning when the parsed number should not be used.\n          if (disallowed(reference)) {\n            warning(numericDisallowed, diff)\n          }\n\n          // Stringify the number.\n          if (reference > 0xffff) {\n            reference -= 0x10000\n            output += fromCharCode((reference >>> (10 & 0x3ff)) | 0xd800)\n            reference = 0xdc00 | (reference & 0x3ff)\n          }\n\n          reference = output + fromCharCode(reference)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat an entity.\n      if (reference) {\n        flush()\n\n        prev = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        next = now()\n        next.offset++\n\n        if (handleReference) {\n          handleReference.call(\n            referenceContext,\n            reference,\n            {start: prev, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        prev = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (\n        character === 10 // Line feed\n      ) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (character === character) {\n        queue += fromCharCode(character)\n        column++\n      } else {\n        flush()\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line: line,\n      column: column,\n      offset: index + (pos.offset || 0)\n    }\n  }\n\n  // “Throw” a parse-error: a warning.\n  function parseError(code, offset) {\n    var position = now()\n\n    position.column += offset\n    position.offset += offset\n\n    handleWarning.call(warningContext, messages[code], position, code)\n  }\n\n  // Flush `queue` (normal text).\n  // Macro invoked before each entity and at the end of `value`.\n  // Does nothing when `queue` is empty.\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (handleText) {\n        handleText.call(textContext, queue, {start: prev, end: now()})\n      }\n\n      queue = ''\n    }\n  }\n}\n\n// Check if `character` is outside the permissible unicode range.\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n// Check if `character` is disallowed.\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (test == null) {\n    return ok\n  }\n\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (typeof test === 'object') {\n    return 'length' in test ? anyFactory(test) : allFactory(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction allFactory(test) {\n  return all\n\n  function all(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) return false\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = []\n  var index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return any\n\n  function any() {\n    var index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","module.exports = identity\nfunction identity(d) {\n  return d\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\nvar color = require('./color')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var step\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n  step = reverse ? -1 : 1\n\n  factory(tree, null, [])()\n\n  function factory(node, index, parents) {\n    var value = typeof node === 'object' && node !== null ? node : {}\n    var name\n\n    if (typeof value.type === 'string') {\n      name =\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      visit.displayName =\n        'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'\n    }\n\n    return visit\n\n    function visit() {\n      var grandparents = parents.concat(node)\n      var result = []\n      var subresult\n      var offset\n\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if (node.children && result[0] !== SKIP) {\n        offset = (reverse ? node.children.length : -1) + step\n\n        while (offset > -1 && offset < node.children.length) {\n          subresult = factory(node.children[offset], offset, grandparents)()\n\n          if (subresult[0] === EXIT) {\n            return subresult\n          }\n\n          offset =\n            typeof subresult[1] === 'number' ? subresult[1] : offset + step\n        }\n      }\n\n      return result\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _get.apply(this, arguments);\n}\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_uiw_react_codesandbox\"] = self[\"webpackChunk_uiw_react_codesandbox\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [137,438,264], function() { return __webpack_require__(6461); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_iterableToArray","iter","Symbol","iterator","from","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_toConsumableArray","isArray","TypeError","_objectWithoutPropertiesLoose","source","excluded","key","target","sourceKeys","keys","indexOf","_extends","assign","bind","arguments","hasOwnProperty","apply","this","_typeof","obj","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","String","Number","_defineProperty","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_setPrototypeOf","p","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_assertThisInitialized","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","_construct","Parent","args","Class","a","Function","_wrapNativeSuper","_cache","Map","fn","has","get","set","Wrapper","stringifyPosition","position","point","index","line","column","pos","start","end","VFileMessage","_Error","_super","reason","place","origin","_this","parts","message","stack","fatal","ruleId","file","actual","expected","url","note","Error","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","_len","segments","_key","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","error","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","options","bufferLike","buffer","data","messages","history","stored","map","prop","includes","assertNonEmpty","assertPart","stem","encoding","part","_arrayWithHoles","_nonIterableRest","_toArray","bail","isPlainObject","toStringTag","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","_len2","output","_key2","middleware","called","wrapped","_len3","parameters","_key3","fnExpectsCallback","done","Promise","then","_len4","_key4","concat","wrap","use","middelware","unified","base","frozen","transformers","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","_attachers$freezeInde","attacher","transformer","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","add","_value","plugin","plugins","entry","isPlainObj","extend","parse","doc","vfile","assertParser","newable","node","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","isBuffer","processSync","destination","type","asyncName","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","all","children","splice","list","remove","items","chunkStart","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","element","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","_document","_flowInitial","_flow","_string","_text","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","d","combined","_combined$key","_combined$key2","normalizeUri","skip","encodeURIComponent","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","_checks$index","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","tab","space","trimLines","last","lines","trimLine","codePointAt","handlers","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","src","inlineCode","linkReference","results","loose","listLoose","disabled","child","root","table","rows","firstRow","shift","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","_objectSpread","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","to","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","_tail$children","tailTail","dataFootnotes","footer","bridge","mutate","Schema","property","normal","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","pow","types","DefinedInfo","_Info","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","style","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","_parent$children","unwrapDisallowed","whitespace","thing","valid","dash","cap","find","schema","Type","charAt","rest","camelcase","dashes","kebab","hastToReact","trim","split","tokens","padRight","padLeft","protocols","uriTransformer","uri","first","colon","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","transformLinkUri","parentSchema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","commas","spaces","_unused","v","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","PropTypes","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","s","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","replacement","callStart","callData","callEscape","labelAtMarker","labelInside","whitespaceAfter","gfmStrikethrough","single","singleTilde","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","ccount","character","findAndReplace","RegExp","ignored","pairs","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","_nodes","global","escape","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","email","association","repeat","eol","patternCompile","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","encode","b","whole","track","lineShift","move","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","safeOptions","tracker","subexit","indentLines","indexStack","createTracker","handle","bulletLastUsed","containerFlow","blank","containerPhrasing","peek","handleDelete","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","row","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","remarkGfm","gfm","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","hasProperty","isNode","headingRank","slugs","Slugger","rehypeSlug","reset","slug","convertElement","tagNameFactory","contentDefaults","rehypeAutolinkHeadings","behavior","behaviour","toChildren","grouping","toNode","buttonTypes","core","defaultTagName","caseSensitive","createAdjustMap","selector","subvalue","parseSelector","isProperties","addChild","isNaN","parsePrimitive","finalResult","h","webNamespaces","mathml","proto","nodeName","quirksMode","childNodes","location","loc","indices","toPoint","toOffset","namespaceURI","attrs","sourceCodeLocation","endTag","verbose","opening","closing","createLocation","startLine","startCol","endLine","endCol","endOffset","zwitch","invalid","unknown","_fn","currentSchema","createProperty","parentNode","doctype","publicId","systemId","htmlVoidElements","endTagToken","parseOptions","sourceCodeLocationInfo","scriptingEnabled","raw","stitches","preprocessor","posTracker","locationTracker","resetTokenizer","_processInputToken","createParse5Location","chars","forceQuirks","lastGapPos","lastCharPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","isEol","lineStartPos","droppedBufferSize","col","currentAttrLocation","ctLoc","_runParsingLoop","_consume","stitch","options_","fromParse5","documentMode","treeAdapter","createDocument","_bootstrap","__mixins","mock","_pushTmplInsertionMode","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","_adoptNodes","currentCharacterToken","tokenQueue","charRefCode","tempBuff","lastStartTagName","consumedAfterSnapshot","active","currentToken","currentAttr","selfClosing","toParse5","rehypeRaw","nextChild","getCommentObject","_ref","_ref$value","param","reduce","keyName","propertiesHandle","defaultAttrs","rehyp","defaultOptions","opts","firstChild","prevChild","attr","rtlRange","ltrRange","rtl","ltr","enterState","dirInferred","currentDirection","editableOrEditingHost","dirProperty","dirBidi","query","normalizeValue","tags","ranges","cast","matches","rightIndex","range","leftIndex","tag","extendedFilter","ZERO","NINE","nthCheck","formula","parsed","boolbase","absA","abs","bMod","idx","sign","readSign","readNumber","skipWhitespace","fauxEsmNthCheck","any","someChildren","_1","_2","_3","empty","enabled","assertDeep","elementIndex","typeIndex","childState","found","shallow","scopeElements","rootQuery","queryToSelectors","walk","elementCount","typeCount","not","getCachedNthCheck","optional","readWrite","pseudo","pseudos","_cachedFn","classNames","needsIndex","selectors","currentRules","nestResult","directChild","descendant","adjacentSibling","generalSibling","selectorIndex","ruleSet","rule","nest","nestingOperator","applySelectors","combine","fromSibling","fromParent","total","counts","CssSelectorParser","registerAttrEqualityMods","registerSelectorPseudos","registerNestingOperators","rewrite","selectAll","octiconLink","rehypeRewriteHandle","class","getCodeStr","str","classList","copyTextToClipboard","dataset","setTimeout","ref","_props$prefixCls","prefixCls","pluginsFilter","_props$warpperElement","warpperElement","other","_excluded","mdp","useImperativeHandle","cls","rehypePrism","ignoreMissing","headings","rehypeRewrite","rehypeAttrs","_jsx","GITHUB_CORNERS_TEMPLATE","GithubCorners","_HTMLElement","shadow","attachShadow","appendChild","ownerDocument","importNode","update","querySelector","toLocaleLowerCase","lastElementChild","setAttribute","firstElementChild","_this2","getAttributeNames","getAttribute","setAttr","oldValue","newValue","HTMLElement","customElements","define","githubCorners","_props$size","_props$fixed","fixed","bottom","zIndex","_props$bgColor","_props$color","_props$position","otherProps","styl","top","_slicedToArray","_i","_s","_e","_x","_r","_arr","_n","_d","err","_ref$files","files","embed","json","getParameters","_useState2","useState","setUrl","useEffect","fetch","Accept","request","sandbox_id","cusUrl","_jsxs","CodeSandbox","dependencies","react","devDependencies","GitHubCorners","logo","Example","ExampleKKT","ExampleNoChild","Markdown","paddingTop","maxWidth","margin","MDStr","container","getElementById","ReactDOMClient","render","App","_createForOfIteratorHelper","require","nodeToString","refractor","module","exports","alias","_step","_iterator","classListItem","f","getLanguage","highlight","cb","el","getSelection","rangeCount","getRangeAt","select","isCopy","execCommand","removeChild","removeAllRanges","addRange","trueFunc","falseFunc","LZString","compressToBase64","parser_context_1","render_1","attrEqualityMods","ruleNestingOperators","substitutesEnabled","_a","pseudos_1","unregisterSelectorPseudos","pseudos_2","registerNumericPseudos","pseudos_3","unregisterNumericPseudos","pseudos_4","operators","operators_1","unregisterNestingOperators","operators_2","mods","mods_1","mod","unregisterAttrEqualityMods","mods_2","enableSubstitutes","disableSubstitutes","parseCssSelector","renderEntity","utils_1","l","chr","getStr","quote","escapeTable","esc","isHex","getIdent","isIdent","identSpecialChars","parseSingleSelector","parseRule","currentRule","op","isIdentStart","attrValue","doubleQuotesEscapeChars","singleQuoteEscapeChars","pseudoName","entity","currentEntity","escapeIdentifier","cn","escapeStr","c","charCode","extraCharCode","strReplacementsRev","t","hasOwn","toStr","gOPD","hasOwnConstructor","hasIsPrototypeOf","setProperty","getProperty","copy","copyIsArray","clone","deep","BananaSlug","slugger","maintainCase","originalSlug","occurrences","isChildren","parsePrimitives","positiveNumber","displayName","val","comma","datasetToProperty","datasetToAttribute","checksLength","xtend","whiteSpace","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","lineno","updatePosition","Position","errorsList","msg","filename","silent","re","m","comments","ret","decl","decls","declarations","alphabetical","decimal","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","_compress","decompressFromBase64","_decompress","compressToUTF16","decompressFromUTF16","compressed","compressToUint8Array","uncompressed","compress","buf","Uint8Array","TotalLen","current_value","decompressFromUint8Array","decompress","compressToEncodedURIComponent","decompressFromEncodedURIComponent","bitsPerChar","getCharFromInt","ii","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","resetValue","getNextValue","w","bits","resb","maxpower","power","dictionary","enlargeIn","dictSize","numBits","characters","legacy","hexadecimal","alphanumerical","decodeEntity","option","defaults","entityCharacters","namedEntity","terminated","following","warning","prev","diff","additional","nonTerminated","handleText","handleReference","handleWarning","textContext","referenceContext","warningContext","queue","parseError","noop","lineFeed","ampersand","formFeed","lessThan","numberSign","uppercaseX","lowercaseX","hexa","deci","semicolon","namedUnknown","namedNotTerminated","namedEmpty","equalsTo","numericNotTerminated","prohibited","bases","numericProhibited","replacementCharacter","numericDisallowed","disallowed","numericEmpty","flush","Prism","_self","uniqueId","plainTextGrammar","manual","disableWorkerMessageHandler","util","Token","objId","deepClone","visited","parentElement","setLanguage","currentScript","scripts","getElementsByTagName","isActive","defaultActivation","contains","languages","plain","plaintext","txt","redef","insertBefore","insert","grammar","newToken","old","DFS","propertyType","highlightAll","highlightAllUnder","env","hooks","elements","querySelectorAll","highlightElement","insertHighlightedCode","highlightedCode","hasAttribute","Worker","worker","onmessage","evt","postMessage","immediateClose","tokenList","LinkedList","addAfter","matchGrammar","array","toArray","callbacks","matchedStr","matchPattern","lookbehind","lookbehindLength","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","flags","currentNode","reach","removeCount","matchStr","removeFrom","removeRange","nestedRematch","newNode","classes","aliases","addEventListener","script","highlightAutomaticallyCallback","readyState","window","requestAnimationFrame","WorkerGlobalScope","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","bigint","bool","func","symbol","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes","u","for","g","q","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","C","sortIndex","performance","unstable_now","Date","A","B","D","E","clearTimeout","F","setImmediate","G","startTime","expirationTime","H","I","J","K","L","M","priorityLevel","navigator","scheduling","isInputPending","S","N","O","P","Q","R","MessageChannel","T","U","port2","port1","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","unstable_shouldYield","unstable_wrapCallback","StyleToObject","hasIterator","CONTINUE","allFactory","__esModule","toPropertyKey","unsupportedIterableToArray","allowArrayLike","it","normalCompletion","didErr","_e2","isNativeReflectConstruct","possibleConstructorReturn","superPropBase","_get","receiver","desc","assertThisInitialized","arrayLikeToArray","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","deferred","chunkIds","priority","notFulfilled","Infinity","fulfilled","every","getter","globalThis","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}